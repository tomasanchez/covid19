{"version":3,"sources":["util/api/engine/CountryValidator.js","components/ObjectHeader/ObjectHeader.jsx","components/Cards/Analytical/Historical.jsx","components/Sections/AnalyticalSections/AnalyticalSection.jsx","components/Sections/DataSection.jsx","util/api/engine/TimeLineHandler.js","pages/Overview/Details/Details.jsx","util/model/Formatter.js","util/api/engine/Request.js"],"names":["Continents","Asia","Europe","Africa","isCountry","sCountry","sContinent","includes","ObjectNumber","label","displayedValue","stateFormatter","stateValue","icon","FlexBox","Label","wrap","showColon","style","marginRight","ObjectStatus","Icon","name","state","Formatter","localeNumber","ObjectHeader","data","t","useTranslation","fRecoveredPercentage","recovered","cases","dLastUpdate","Date","updated","toLocaleString","direction","covidCasesCountries","covidRecovered","deaths","width","ProgressIndicator","value","valueState","Badge","colorScheme","Header","sTitle","sSubTitle","sUnit","sState","sName","obtainState","AnalyticalCardHeader","title","subTitle","currency","unit","description","arrowIndicator","indicatorState","DataChart","analyticalData","sColor","sLabel","LineChart","dataset","dimensions","accessor","interval","isMobile","formatter","sMonth","substr","indexOf","measures","hideDataLabel","color","noLegend","Historical","analytycalData","AnalyticalCard","header","AnalyticalSection","fitContainer","justifyContent","DataSection","Form","columnsL","columnsS","columnsM","columnsXL","labelSpanL","labelSpanM","labelSpanXL","FormItem","population","active","showDefaultIcon","critical","tests","aMonthNames","isInCurrentMoth","sDate","iMonth","iYear","getMonth","endsWith","toString","parseInt","createTimeline","aDates","oMeasure","lastMonth","aTimeLine","iThisYear","getFullYear","month","year","aMeasures","filter","map","sDay","iMeasure","length","push","Value","createHistoricalData","oHistorical","a","oHistoricalData","forEach","sMeasure","Object","getOwnPropertyNames","timeline","iLastMonth","PageBreadcrumbs","sHome","history","useHistory","Breadcrumbs","currentLocationText","Link","onClick","oEvent","getUrl","Details","match","useState","undefined","oCountry","setEntity","setHistorical","sObjectId","params","id","useEffect","sPath","Request","createKey","readSingle","then","oResponse","sHistoricalPath","sTile","Helmet","ObjectPage","breadcrumbs","country","image","countryInfo","flag","headerContent","selectedSectionId","height","ObjectPageSection","aria-label","todayCases","todayRecovered","todayDeaths","covidCasesContinent","iCases","sValueState","ValueState","None","Warning","Error","Information","Success","number","Intl","NumberFormat","format","Params","yesterday","lastDays","URLs","BASEURL","ContinentsSet","CountriesSet","HistoricalSet","TopCountriesPerCasesSet","Api","axios","create","baseURL","read","sURL","get","sUrl","sKey","sParam"],"mappings":"6PAkOMA,EAAa,CACjB,gBAlOO,CACL,WACA,sBACA,QACA,UACA,WACA,SACA,UACA,yBACA,SACA,wBACA,iBACA,aACA,OACA,aACA,WACA,qBACA,cACA,YACA,UACA,aACA,YACA,QACA,WACA,UACA,aACA,SACA,aACA,YACA,SACA,wBACA,cACA,eACA,wBACA,mCACA,eACA,YACA,sBACA,2BACA,OA4LFC,KAvLO,CACL,cACA,UACA,aACA,UACA,aACA,SACA,SACA,WACA,QACA,SACA,UACA,YACA,QACA,YACA,OACA,OACA,SACA,QACA,SACA,aACA,SACA,aACA,mCACA,UACA,QACA,WACA,WACA,WACA,UACA,QACA,OACA,WACA,YACA,cACA,QACA,WACA,eACA,YACA,YACA,uBACA,SACA,aACA,WACA,cACA,SACA,MACA,aACA,UACA,SAuIF,gBAlIO,CAAC,YAAa,UAAW,SAAU,QAAS,WAAY,UAAW,8BAA+B,gBAAiB,SAAU,WAAY,OAAQ,WAAY,UAAW,aAmI/KC,OA/HO,CACL,UACA,UACA,UACA,UACA,UACA,SACA,WACA,kBACA,UACA,UACA,UACA,UACA,gBACA,UACA,SACA,UACA,YACA,SACA,gCACA,UACA,UACA,UACA,cACA,QACA,SACA,gBACA,YACA,aACA,YACA,QACA,UACA,SACA,aACA,cACA,SACA,SACA,WACA,UACA,SACA,aACA,SACA,WACA,WACA,QACA,SACA,cACA,KACA,WAgFFC,OA3EO,CACL,UACA,SACA,QACA,WACA,eACA,UACA,aACA,WACA,2BACA,OACA,UACA,QACA,mBACA,MACA,WACA,QACA,oBACA,UACA,WACA,QACA,SACA,QACA,SACA,gBACA,QACA,UACA,UACA,yBACA,aACA,SACA,OACA,aACA,YACA,UACA,UACA,aACA,UACA,QACA,UACA,SACA,aACA,wBACA,UACA,aACA,eACA,UACA,eACA,cACA,QACA,YACA,WACA,OACA,UACA,SACA,iBACA,SACA,YAmBF,oBAdO,CAAC,YAAa,OAAQ,mBAAoB,mBAAoB,aAAc,gBAAiB,cAAe,m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","file":"static/js/7.4843ad55.chunk.js","sourcesContent":["const NA = () => {\n  return [\n    'Anguilla',\n    'Antigua and Barbuda',\n    'Aruba',\n    'Bahamas',\n    'Barbados',\n    'Belize',\n    'Bermuda',\n    'British Virgin Islands',\n    'Canada',\n    'Caribbean Netherlands',\n    'Cayman Islands',\n    'Costa Rica',\n    'Cuba',\n    'Curaçao',\n    'Dominica',\n    'Dominican Republic',\n    'El Salvador',\n    'Greenland',\n    'Grenada',\n    'Guadeloupe',\n    'Guatemala',\n    'Haiti',\n    'Honduras',\n    'Jamaica',\n    'Martinique',\n    'Mexico',\n    'Montserrat',\n    'Nicaragua',\n    'Panama',\n    'Saint Kitts and Nevis',\n    'Saint Lucia',\n    'Saint Martin',\n    'Saint Pierre Miquelon',\n    'Saint Vincent and the Grenadines',\n    'Sint Maarten',\n    'St. Barth',\n    'Trinidad and Tobago',\n    'Turks and Caicos Islands',\n    'USA',\n  ];\n};\n\nconst ASIA = () => {\n  return [\n    'Afghanistan',\n    'Armenia',\n    'Azerbaijan',\n    'Bahrain',\n    'Bangladesh',\n    'Bhutan',\n    'Brunei',\n    'Cambodia',\n    'China',\n    'Cyprus',\n    'Georgia',\n    'Hong Kong',\n    'India',\n    'Indonesia',\n    'Iran',\n    'Iraq',\n    'Israel',\n    'Japan',\n    'Jordan',\n    'Kazakhstan',\n    'Kuwait',\n    'Kyrgyzstan',\n    \"Lao People's Democratic Republic\",\n    'Lebanon',\n    'Macao',\n    'Malaysia',\n    'Maldives',\n    'Mongolia',\n    'Myanmar',\n    'Nepal',\n    'Oman',\n    'Pakistan',\n    'Palestine',\n    'Philippines',\n    'Qatar',\n    'S. Korea',\n    'Saudi Arabia',\n    'Singapore',\n    'Sri Lanka',\n    'Syrian Arab Republic',\n    'Taiwan',\n    'Tajikistan',\n    'Thailand',\n    'Timor-Leste',\n    'Turkey',\n    'UAE',\n    'Uzbekistan',\n    'Vietnam',\n    'Yemen',\n  ];\n};\n\nconst SA = () => {\n  return ['Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia', 'Ecuador', 'Falkland Islands (Malvinas)', 'French Guiana', 'Guyana', 'Paraguay', 'Peru', 'Suriname', 'Uruguay', 'Venezuela'];\n};\n\nconst EUR = () => {\n  return [\n    'Albania',\n    'Andorra',\n    'Austria',\n    'Belarus',\n    'Belgium',\n    'Bosnia',\n    'Bulgaria',\n    'Channel Islands',\n    'Croatia',\n    'Czechia',\n    'Denmark',\n    'Estonia',\n    'Faroe Islands',\n    'Finland',\n    'France',\n    'Germany',\n    'Gibraltar',\n    'Greece',\n    'Holy See (Vatican City State)',\n    'Hungary',\n    'Iceland',\n    'Ireland',\n    'Isle of Man',\n    'Italy',\n    'Latvia',\n    'Liechtenstein',\n    'Lithuania',\n    'Luxembourg',\n    'Macedonia',\n    'Malta',\n    'Moldova',\n    'Monaco',\n    'Montenegro',\n    'Netherlands',\n    'Norway',\n    'Poland',\n    'Portugal',\n    'Romania',\n    'Russia',\n    'San Marino',\n    'Serbia',\n    'Slovakia',\n    'Slovenia',\n    'Spain',\n    'Sweden',\n    'Switzerland',\n    'UK',\n    'Ukraine',\n  ];\n};\n\nconst AF = () => {\n  return [\n    'Algeria',\n    'Angola',\n    'Benin',\n    'Botswana',\n    'Burkina Faso',\n    'Burundi',\n    'Cabo Verde',\n    'Cameroon',\n    'Central African Republic',\n    'Chad',\n    'Comoros',\n    'Congo',\n    \"Côte d'Ivoire\",\n    'DRC',\n    'Djibouti',\n    'Egypt',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Ethiopia',\n    'Gabon',\n    'Gambia',\n    'Ghana',\n    'Guinea',\n    'Guinea-Bissau',\n    'Kenya',\n    'Lesotho',\n    'Liberia',\n    'Libyan Arab Jamahiriya',\n    'Madagascar',\n    'Malawi',\n    'Mali',\n    'Mauritania',\n    'Mauritius',\n    'Mayotte',\n    'Morocco',\n    'Mozambique',\n    'Namibia',\n    'Niger',\n    'Nigeria',\n    'Rwanda',\n    'Réunion',\n    'Sao Tome and Principe',\n    'Senegal',\n    'Seychelles',\n    'Sierra Leone',\n    'Somalia',\n    'South Africa',\n    'South Sudan',\n    'Sudan',\n    'Swaziland',\n    'Tanzania',\n    'Togo',\n    'Tunisia',\n    'Uganda',\n    'Western Sahara',\n    'Zambia',\n    'Zimbabwe',\n  ];\n};\n\nconst OC = () => {\n  return ['Australia', 'Fiji', 'French Polynesia', 'Marshall Islands', 'Micronesia', 'New Caledonia', 'New Zealand', 'Papua New Guinea', 'Samoa', 'Solomon Islands', 'Vanuatu', 'Wallis and Futuna'];\n};\n\n/**\n * Continents List\n * @public\n * @object\n */\nconst Continents = {\n  'North America': NA(),\n  Asia: ASIA(),\n  'South America': SA(),\n  Europe: EUR(),\n  Africa: AF(),\n  'Australia/Oceania': OC(),\n};\n\n/**\n * Convenience method for obtaining a country's continent\n * @public\n * @function\n * @param {string} sCountry the country name\n * @returns {string | false} the continents name or false if not found\n */\nconst isCountry = (sCountry) => {\n  for (var sContinent in Continents) {\n    if (Continents[sContinent].includes(sCountry)) return sContinent;\n    else continue;\n  }\n\n  return false;\n};\n\nexport default isCountry;\n","import React from 'react';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { ProgressIndicator } from '@ui5/webcomponents-react/lib/ProgressIndicator';\nimport { Label } from '@ui5/webcomponents-react/lib/Label';\nimport { ObjectStatus } from '@ui5/webcomponents-react/lib/ObjectStatus';\nimport { useTranslation } from 'react-i18next/';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { Badge } from '@ui5/webcomponents-react/lib/Badge';\nimport Formatter from '../../util/model/Formatter';\n\n/**\n * Object Status modified with label and locale numbers\n * @private\n * @component\n * @param {props} props the properties values\n * @returns {ui5.webcomponents.react.FlexBox} Label and Object status with flexbox layout\n */\nconst ObjectNumber = ({ label, displayedValue, stateFormatter, stateValue, icon }) => {\n  return (\n    <FlexBox>\n      {label && (\n        <Label wrap={true} showColon={true} style={{ marginRight: '0.5rem' }}>\n          {label}\n        </Label>\n      )}\n      <ObjectStatus icon={icon && <Icon name={icon} />} state={stateFormatter ? (stateValue ? stateFormatter(stateValue) : stateFormatter(displayedValue)) : 'None'}>\n        {Formatter.localeNumber(displayedValue)}\n      </ObjectStatus>\n    </FlexBox>\n  );\n};\n\n/**\n * Country header for an object page\n * @public\n * @component\n * @param {props} data the country data\n * @returns {HTMLElemnt} the header content of an object page\n */\nconst ObjectHeader = ({ data }) => {\n  const { t } = useTranslation();\n\n  const fRecoveredPercentage = (data.recovered * 100) / data.cases;\n  const dLastUpdate = new Date(data.updated).toLocaleString();\n\n  return (\n    <>\n      <FlexBox direction=\"Column\">\n        <ObjectNumber icon=\"doctor\" label={t('casesColumnHeader')} displayedValue={data.cases} stateFormatter={Formatter.covidCasesCountries} />\n        <ObjectNumber icon=\"syringe\" label={t('recoveredColumnHeader')} displayedValue={data.recovered} stateFormatter={Formatter.covidRecovered} stateValue={fRecoveredPercentage} />\n        <ObjectNumber label={t('deceasesColumnHeader')} displayedValue={data.deaths} />\n      </FlexBox>\n      <FlexBox direction=\"Column\" style={{ width: '30vw' }}>\n        <Label>{t('listRecoveredLabel')}</Label>\n        <ProgressIndicator value={fRecoveredPercentage} valueState={Formatter.covidRecovered(fRecoveredPercentage)} />\n      </FlexBox>\n      <FlexBox direction=\"Column\">\n        <Label>{t('updatedObjectLabel')}</Label>\n        <Badge icon={<Icon name=\"date-time\" />} colorScheme={9}>\n          {dLastUpdate}\n        </Badge>\n      </FlexBox>\n    </>\n  );\n};\n\nexport default ObjectHeader;\n","import React from 'react';\nimport { AnalyticalCard } from '@ui5/webcomponents-react/lib/AnalyticalCard';\nimport { AnalyticalCardHeader } from '@ui5/webcomponents-react/lib/AnalyticalCardHeader';\nimport { LineChart } from '@ui5/webcomponents-react-charts/lib/LineChart';\nimport { isMobile } from '@ui5/webcomponents-base/dist/Device';\nimport Formatter from '../../../util/model/Formatter';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Convinience function to obtain sap ui state\n * @private\n * @function\n * @param {string} sName the variant name\n * @returns {ui5.webcomponents.react.ValueState} a value state\n */\nconst obtainState = (sName) => {\n  switch (sName) {\n    case 'cases':\n      return 'Warning';\n    case 'deceases':\n      return 'Error';\n    case 'recovered':\n      return 'Success';\n    default:\n      return 'None';\n  }\n};\n\n/**\n * Polymorfic component to handle a custom analytical card header\n * @public\n * @component\n * @param {string} name the variant name\n * @param {object}  data the country data obtained\n * @returns {ui5.webcomponents.react.AnalyticalCardHeader} an Analytical Card custom Header\n */\nconst Header = ({ data, name }) => {\n  const { t } = useTranslation();\n\n  const sTitle = name + 'AnalyticalTitle',\n    sSubTitle = name + 'AnalyticalSubTitle',\n    sUnit = name + 'AnalyticalUnit';\n\n  const sState = obtainState(name);\n\n  return (\n    <AnalyticalCardHeader\n      title={t(sTitle)}\n      subTitle={t(sSubTitle)}\n      currency={'Johns Hopkins University'}\n      unit={t(sUnit)}\n      description={t('analyticalDescription')}\n      value={Formatter.localeNumber(data)}\n      valueState={sState}\n      arrowIndicator=\"Up\"\n      indicatorState={sState}\n    />\n  );\n};\n\n/**\n * Polymorfic chart for timeline\n * @private\n * @component\n * @param {array} analytycalData the historical data\n * @returns {ui5.webcomponents.react.LineChart} a line chart\n */\nconst DataChart = ({ analyticalData, name }) => {\n  const sColor = name === 'cases' ? 'var(--sapCriticalTextColor)' : name === 'recovered' ? 'var(--sapPositiveTextColor)' : 'var(--sapNegativeTextColor)';\n  const sLabel = name + 'ChartLabel';\n  const { t } = useTranslation();\n\n  const translateMotnh = (sMonth) => {\n    return t(sMonth.substr(0, sMonth.indexOf(' ')));\n  };\n\n  return (\n    <>\n      {analyticalData ? (\n        <LineChart\n          dataset={analyticalData}\n          dimensions={[{ accessor: 'month', interval: isMobile() ? 4 : 1, formatter: translateMotnh }]}\n          measures={[{ accessor: 'Value', formatter: Formatter.localeNumber, hideDataLabel: isMobile(), color: sColor, label: t(sLabel) }]}\n          noLegend\n        />\n      ) : (\n        <LineChart\n          dimensions={[]}\n          measures={[]}\n          style={{\n            width: '100%',\n          }}\n        />\n      )}\n    </>\n  );\n};\n\n/**\n * Polymorfic component to handle a custom analytical card\n * @public\n * @component\n * @param {string} name the variant name\n * @param {object}  data the country data obtained\n * @param {array} analytycalData the historical data\n * @returns {ui5.webcomponents.react.AnalyticalCard} an analytical card\n */\nconst Historical = ({ name, data, analytycalData }) => {\n  return (\n    <AnalyticalCard style={{ width: '100vw' }} header={<Header data={data} name={name} />}>\n      <DataChart name={name} analyticalData={analytycalData} />\n    </AnalyticalCard>\n  );\n};\n\nexport default Historical;\n","import React from 'react';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport Historical from '../../Cards/Analytical/Historical';\n\n/**\n * Polymorfic component to fill object page section with a custom style\n * @public\n * @component\n * @param {string} name the variant name\n * @param {object}  data the country data obtained\n * @param {array} analytycalData the historical data\n * @returns {ui5.webcomponents.react.FlexBox} an analytical card inside a flexbox container\n */\nconst AnalyticalSection = ({ name, data, analyticalData }) => {\n  return (\n    <FlexBox fitContainer={true} wrap=\"Wrap\" justifyContent=\"Center\">\n      <Historical name={name} data={data} analytycalData={analyticalData} />\n    </FlexBox>\n  );\n};\n\nexport default AnalyticalSection;\n","import React from 'react';\nimport { Form } from '@ui5/webcomponents-react/lib/Form';\nimport { FormItem } from '@ui5/webcomponents-react/lib/FormItem';\nimport { ObjectStatus } from '@ui5/webcomponents-react/lib/ObjectStatus';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { useTranslation } from 'react-i18next/';\nimport Formatter from '../../util/model/Formatter';\n\nconst DataSection = ({ data }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Form title={t('countryData')} columnsL={4} columnsS={2} columnsM={2} columnsXL={3} labelSpanL={6} labelSpanM={6} labelSpanXL={6}>\n      <FormItem label={t('populationLabel')}>\n        <ObjectStatus icon={<Icon name=\"group\" />} state=\"Information\">\n          {Formatter.localeNumber(data.population)}\n        </ObjectStatus>\n      </FormItem>\n      <FormItem label={t('activeCases')}>\n        <ObjectStatus icon={<Icon name=\"nurse\" />}>{Formatter.localeNumber(data.active)}</ObjectStatus>\n      </FormItem>\n      <FormItem label={t('criticalCases')}>\n        <ObjectStatus showDefaultIcon={true} state=\"Warning\">\n          {Formatter.localeNumber(data.critical)}\n        </ObjectStatus>\n      </FormItem>\n      <FormItem label={t('testLabel')}>\n        <ObjectStatus icon={<Icon name=\"lab\" />} state=\"Success\">\n          {Formatter.localeNumber(data.tests)}\n        </ObjectStatus>\n      </FormItem>\n    </Form>\n  );\n};\n\nexport default DataSection;\n","/* eslint-disable no-loop-func */\nconst aMonthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n/**\n * Filter function to get all dates in a month\n * @private\n * @function\n * @param {string} sDate the formatted date dd/mm/yy\n * @param {int} iMonth the current itereated month number\n * @param {int} iYear the current iterated year\n * @return {boolean} if date is in the current iteration or not\n */\nconst isInCurrentMoth = (sDate, iMonth, iYear) => {\n  return getMonth(sDate) === iMonth && sDate.endsWith(iYear.toString());\n};\n\n/**\n * Gets the month of a date with format dd/mm/yy\n * @private\n * @function\n * @param {string} sDate the formatted date dd/mm/yy\n * @return {int} month number\n */\nconst getMonth = (sDate) => {\n  return parseInt(sDate.substr(sDate, sDate.indexOf('/')), 10);\n};\n\n/**\n * Parses the timeline JSON to an array per month\n * @private\n * @function\n * @param {array} aDates the array with all dates\n * @param {object} oMeasure the object from where to obtain the date data\n * @param {int} lastMonth the last month number\n * @return {array} a Timeline array\n */\nconst createTimeline = (aDates, oMeasure, lastMonth) => {\n  var aTimeLine = [],\n    iThisYear = new Date().getFullYear() % 100;\n\n  for (var month = 1, year = 20; year <= iThisYear; month++) {\n    // Cut loop when passed the last month\n    if (month === lastMonth + 1 && year === iThisYear) break;\n\n    // Getting all dates from the current Month\n    var aDays = aDates.filter((sDate) => {\n      return isInCurrentMoth(sDate, month, year);\n    });\n\n    // getting the date measures\n    var aMeasures = aDays.map((sDay) => oMeasure[sDay]);\n\n    // total measures from the month\n    var iMeasure = aMeasures[aMeasures.length - 1];\n\n    /*  aMeasures.reduce((totalMeasures, measures) => {\n      return totalMeasures + measures;\n    }, 0); */\n\n    // adding to timeline\n    aTimeLine.push({ month: `${aMonthNames[month - 1]} ${year}`, Value: iMeasure, year: 2000 + year });\n\n    // updating year\n    if (month === 12) {\n      year++;\n      month = 0;\n    }\n  }\n\n  return aTimeLine;\n};\n\n/**\n * Simplifies the historical data\n * @public\n * @function\n * @param {object} oHistorical the historical data json\n * @return {object} A new historical data object { cases: [], deaths: [], recovered: []}\n */\nconst createHistoricalData = async (oHistorical) => {\n  var oHistoricalData = { cases: [], deaths: [], recovered: [] };\n\n  var aMeasures = ['cases', 'deaths', 'recovered'];\n\n  aMeasures.forEach((sMeasure) => {\n    var aDates = Object.getOwnPropertyNames(oHistorical.timeline[sMeasure]),\n      iLastMonth = getMonth(aDates[aDates.length - 1]);\n\n    oHistoricalData[sMeasure] = createTimeline(aDates, oHistorical.timeline[sMeasure], iLastMonth);\n  });\n\n  return oHistoricalData;\n};\n\nexport default createHistoricalData;\n","/* eslint-disable no-loop-func */\nimport { ObjectPageSection } from '@ui5/webcomponents-react/lib/ObjectPageSection';\nimport { Breadcrumbs } from '@ui5/webcomponents-react/lib/Breadcrumbs';\nimport { Link } from '@ui5/webcomponents-react/lib/Link';\nimport { ObjectPage } from '@ui5/webcomponents-react/lib/ObjectPage';\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport Request from '../../../util/api/engine/Request';\nimport isCountry from '../../../util/api/engine/CountryValidator';\nimport { getUrl } from '../../../util/browser/BrowserProvider';\nimport ObjectHeader from '../../../components/ObjectHeader/ObjectHeader';\nimport AnalyticalSection from '../../../components/Sections/AnalyticalSections/AnalyticalSection';\nimport DataSection from '../../../components/Sections/DataSection';\nimport createHistoricalData from '../../../util/api/engine/TimeLineHandler';\n\n/**\n * Breadcrumbs functional component method.\n * @private\n * @component\n * @param {string} sCountry the country name to be displayed\n * @param {string} sHome the home text to be displayed\n * @returns {ui5.webcomponents.react.Breadcrumbs} UI5 Breadcrumbs\n */\nconst PageBreadcrumbs = ({ sCountry, sHome }) => {\n  const history = useHistory();\n\n  const onNavHome = (oEvent) => {\n    history.push(getUrl('HOME'));\n  };\n\n  return (\n    <Breadcrumbs currentLocationText={sCountry}>\n      <Link onClick={onNavHome}>{sHome}</Link>\n    </Breadcrumbs>\n  );\n};\n\n/**\n * Country object page\n * @public\n * @component\n * @param {props} match.params.id the supposed country name\n * @returns {ui5.webcomponents.react.ObjectPage} the details object page\n */\nconst Details = ({ match }) => {\n  const { t } = useTranslation();\n  const [oCountry, setEntity] = useState(undefined);\n  const [oHistorical, setHistorical] = useState(undefined);\n  const sObjectId = match.params.id;\n  const sContinent = isCountry(sObjectId);\n\n  const history = useHistory();\n\n  if (!sContinent) {\n    history.push(getUrl('NOT_FOUND'));\n  }\n\n  useEffect(() => {\n    if (!oCountry) {\n      var sPath = Request.createKey('CountriesSet', sObjectId);\n      Request.readSingle(sPath).then((oResponse) => {\n        setEntity(oResponse.data);\n      });\n\n      var sHistoricalPath = Request.createKey('HistoricalSet', sObjectId, 'lastDays');\n      Request.readSingle(sHistoricalPath).then((oResponse) => {\n        createHistoricalData(oResponse.data).then((oHistoricalData) => setHistorical(oHistoricalData));\n      });\n    }\n  }, [oCountry, sObjectId]);\n\n  const sTile = t('helmet.title.details') + sObjectId;\n\n  return (\n    <>\n      <Helmet title={sTile} />\n      {oCountry && (\n        <ObjectPage\n          breadcrumbs={<PageBreadcrumbs sCountry={oCountry.country} sHome={t('homeBreadCrum')} />}\n          image={oCountry.countryInfo.flag}\n          headerContent={<ObjectHeader data={oCountry} />}\n          title={oCountry.country}\n          subTitle={t(sContinent)}\n          selectedSectionId=\"dataSection\"\n          style={{ height: '100vh' }}\n        >\n          <ObjectPageSection aria-label={t('countryData')} id=\"dataSection\" title={t('countryData')}>\n            <DataSection data={oCountry} />\n          </ObjectPageSection>\n\n          <ObjectPageSection aria-label={t('historicalCases')} id=\"historicalCases\" title={t('historicalCases')}>\n            <AnalyticalSection name=\"cases\" data={oCountry.todayCases} analyticalData={oHistorical && oHistorical.cases} />\n          </ObjectPageSection>\n\n          <ObjectPageSection aria-label={t('historicalRecovered')} id=\"historicalRecovered\" title={t('historicalRecovered')}>\n            <AnalyticalSection name=\"recovered\" data={oCountry.todayRecovered} analyticalData={oHistorical && oHistorical.recovered} />\n          </ObjectPageSection>\n\n          <ObjectPageSection aria-label={t('historicalDeceases')} id=\"historicalDeceases\" title={t('historicalDeceases')}>\n            <AnalyticalSection name=\"deceases\" data={oCountry.todayDeaths} analyticalData={oHistorical && oHistorical.deaths} />\n          </ObjectPageSection>\n        </ObjectPage>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import { ValueState } from '@ui5/webcomponents-react';\n\nconst Formatter = {\n  covidCasesContinent: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 50000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 150000) sValueState = ValueState.Error;\n    } else if (iCases >= 25000) sValueState = ValueState.Information;\n\n    return sValueState;\n  },\n\n  covidCasesCountries: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 5000000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 10500000) sValueState = ValueState.Error;\n    } else if (iCases >= 1000000) sValueState = ValueState.Information;\n    else if (iCases <= 500000) sValueState = ValueState.Success;\n\n    return sValueState;\n  },\n\n  covidRecovered: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 55) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 70) {\n        sValueState = ValueState.Information;\n        if (iCases >= 90) sValueState = ValueState.Success;\n      }\n    } else if (iCases <= 45) sValueState = ValueState.Error;\n\n    return sValueState;\n  },\n\n  localeNumber: (number) => {\n    return Intl.NumberFormat().format(number);\n  },\n};\n\nexport default Formatter;\n","import axios from 'axios';\n\nconst Params = {\n  yesterday: 'yesterday=true',\n  lastDays: 'lastdays=all',\n};\n\nconst URLs = {\n  BASEURL: `https://disease.sh/v3/covid-19/`,\n  ContinentsSet: '/continents?yesterday=true&sort=todayCases',\n  CountriesSet: '/countries/',\n  HistoricalSet: '/historical/',\n  TopCountriesPerCasesSet: '/countries?sort=cases',\n};\n\nconst Api = axios.create({\n  baseURL: URLs.BASEURL,\n});\n\nconst Request = {\n  read: (sURL) => {\n    return Api.get(URLs[sURL]);\n  },\n  createKey: (sUrl, sKey, sParam) => {\n    return sParam ? URLs[sUrl] + sKey + '?' + Params[sParam] : URLs[sUrl] + sKey;\n  },\n  readSingle: (sPath) => {\n    return Api.get(sPath);\n  },\n};\n\nexport default Request;\n"],"sourceRoot":""}