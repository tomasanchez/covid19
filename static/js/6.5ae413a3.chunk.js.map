{"version":3,"sources":["pages/Todo/Edit/TodoEdit.js","../../src/enums/ButtonDesign.ts","../../src/webComponents/Button/index.tsx","components/Layout/CenteredContent.js","hooks/services/useTodos.js","components/NavBack/NavBack.js"],"names":["TodoEditForm","lazy","onSubmitEditForm","values","actions","setSubmitting","alert","JSON","stringify","resetForm","TodoEdit","match","useTodo","data","isLoading","isSuccess","title","active","fallback","todos","onSubmitHandler","ButtonDesign","Button","withWebComponent","design","disabled","iconEnd","iconSize","submits","style","centered","minWidth","isMobile","padding","margin","CenteredContent","props","data-testid","children","useTodos","page","usePaginatedGet","Constants","REACT_QUERY","KEYS","RQ_GET_TODO_LIST","getUrl","useGet","GET_TODO_BY_ID","value","params","id","NavBack","text","i18n","t","icon","Transparent","history","useHistory","spacing","sapUiTinyMargin","onClick","goBack","NavBackIcon","NONE"],"mappings":"wNAQMA,EAAeC,gBAAK,kBAAM,gEAE1BC,EAAmB,SAACC,EAAQC,GAChCA,EAAQC,eAAc,GACtBC,MAAMC,KAAKC,UAAUL,EAAQ,KAAM,IACnCC,EAAQK,WAAU,GAClBL,EAAQC,eAAc,IAyBTK,UAtBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACSC,YAAQD,GAAvCE,EADsB,EACtBA,KAAMC,EADgB,EAChBA,UAAWC,EADK,EACLA,UAEzB,OACE,qCACE,cAAC,IAAD,CAAQC,MAAM,wBAEd,cAAC,IAAD,IACA,eAAC,IAAD,WACE,uBACCF,GAAa,cAAC,IAAD,CAAeG,QAAM,IAElCF,GACC,cAAC,WAAD,CAAUG,SAAU,cAAC,IAAD,CAAeD,QAAM,IAAzC,SACE,cAACjB,EAAD,CAAca,KAAMA,EAAKA,KAAKM,MAAOC,gBAAiBlB,c,qCC/BtDmB,E,2CAAAA,yH,CAAAA,Y,wFC2DNC,G,OAA8BC,YAAgB,aAElD,CAAC,SAAU,OAFuC,YAGlD,CAAC,WAAY,UAHqC,cAKlD,CALkD,WAQpDD,uBAEAA,eAAsB,CACpBE,OAAQH,IADY,QAEpBI,UAFoB,EAGpBC,SAHoB,EAIpBC,cAJoB,EAKpBC,SAAS,I,oECvELC,EAAQ,CACZC,SAAU,CACRC,SAAUC,cAAa,MAAQ,MAC/BC,QAAS,OACTC,OAAQ,WAYGC,IARS,SAACC,GACvB,OACE,6CAAKC,cAAY,mBAAmBR,MAAOA,EAAMC,UAAcM,GAA/D,aACGA,EAAME,c,iCCdb,mGAKaC,EAAW,SAACC,GACvB,OAAOC,YAAgBC,IAAUC,YAAYC,KAAKC,iBAAkBL,EAAMM,YAAO,mBAGtElC,EAAU,SAACD,GACtB,OAAOoC,YAAOL,IAAUC,YAAYC,KAAKI,eAAgBF,YAAO,iBAAkB,CAAC,CAAEG,MAAOtC,EAAMuC,OAAOC,S,2ICY5FC,IAZC,SAAC,GAA0H,IAAD,IAAvHC,YAAuH,MAAhHC,IAAKC,EAAE,2BAAyG,MAA7EC,YAA6E,MAAtE,WAAsE,MAA1DhC,cAA0D,MAAjDH,IAAaoC,YAAoC,MAAvBhC,gBAAuB,SAClIiC,EAAUC,cAEhB,OACE,cAAC,IAAD,CAAS9B,MAAO+B,IAAQC,gBAAxB,SACE,cAAC,IAAD,CAAQxB,cAAY,kBAAkBb,OAAQA,EAAQC,SAAUA,EAAU+B,KAAMA,EAAM9B,SAAS,EAAOoC,QAAS,kBAAMJ,EAAQK,UAAUnC,SAAS,EAAhJ,SACGyB,OAQF,IAAMW,EAAc,CACzBC,KAAM","file":"static/js/6.5ae413a3.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTodo } from '../../../hooks/services/useTodos';\n\nimport { BusyIndicator } from '@ui5/webcomponents-react/lib/BusyIndicator';\nimport NavBack from '../../../components/NavBack/NavBack';\nimport CenteredContent from '../../../components/Layout/CenteredContent';\n\nconst TodoEditForm = lazy(() => import('./TodoEditForm'));\n\nconst onSubmitEditForm = (values, actions) => {\n  actions.setSubmitting(true);\n  alert(JSON.stringify(values, null, 2));\n  actions.resetForm(true);\n  actions.setSubmitting(false);\n};\n\nconst TodoEdit = ({ match }) => {\n  const { data, isLoading, isSuccess } = useTodo(match);\n\n  return (\n    <>\n      <Helmet title=\"Edit - TodoList App\" />\n\n      <NavBack />\n      <CenteredContent>\n        <br />\n        {isLoading && <BusyIndicator active />}\n\n        {isSuccess && (\n          <Suspense fallback={<BusyIndicator active />}>\n            <TodoEditForm data={data.data.todos} onSubmitHandler={onSubmitEditForm} />\n          </Suspense>\n        )}\n      </CenteredContent>\n    </>\n  );\n};\n\nexport default TodoEdit;\n","export enum ButtonDesign {\n  Default = 'Default',\n  Positive = 'Positive',\n  Negative = 'Negative',\n  Transparent = 'Transparent',\n  Emphasized = 'Emphasized'\n}\n","import { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/Button';\nimport { FC, ReactNode } from 'react';\n\nexport interface ButtonPropTypes extends Omit<WithWebComponentPropTypes, 'onClick'> {\n  /**\n   * Defines the `Button` design.\n   *\n   * **Note:** Available options are \"Default\", \"Emphasized\", \"Positive\", \"Negative\", and \"Transparent\".\n   */\n  design?: ButtonDesign;\n  /**\n   * Defines whether the `Button` is disabled (default is set to `false`). A disabled `Button` can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon to be displayed as graphical element within the `Button`. The SAP-icons font provides numerous options.\n   *\n   * Example:\n   *\n   * Button icon=\"palette\"\n   *\n   * See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the icon should be displayed after the `Button` text.\n   */\n  iconEnd?: boolean;\n  /**\n   * Defines the size of the icon inside the `Button`.\n   */\n  iconSize?: string;\n  /**\n   * When set to `true`, the `Button` will automatically submit the nearest form element upon `press`.\n   *\n   * **Important:** For the `submits` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  submits?: boolean;\n  /**\n   * Defines the text of the `Button`.\n   *\n   * **Note:** Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the `Button` is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: (event: CustomEvent) => void;\n}\n\n/**\n * The `Button` component represents a simple push button. It enables users to trigger actions by clicking or tapping the `Button`, or by pressing certain keyboard keys, such as Enter.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/Button\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst Button: FC<ButtonPropTypes> = withWebComponent<ButtonPropTypes>(\n  'ui5-button',\n  ['design', 'icon', 'iconSize'],\n  ['disabled', 'iconEnd', 'submits'],\n  [],\n  ['click']\n);\n\nButton.displayName = 'Button';\n\nButton.defaultProps = {\n  design: ButtonDesign.Default,\n  disabled: false,\n  iconEnd: false,\n  iconSize: undefined,\n  submits: false\n};\n\nexport { Button };\n","import React from 'react';\nimport { isMobile } from '@ui5/webcomponents-base/dist/Device';\n\nconst style = {\n  centered: {\n    minWidth: isMobile() ? '80%' : '50%',\n    padding: '1rem',\n    margin: '0 auto',\n  },\n};\n\nconst CenteredContent = (props) => {\n  return (\n    <div data-testid=\"centered-content\" style={style.centered} {...props}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default CenteredContent;\n","import Constants from '../../util/Constants';\n\nimport { usePaginatedGet, useGet } from '../../hooks/useRequest';\nimport { getUrl } from '../../util/api/url/APIProvider';\n\nexport const useTodos = (page) => {\n  return usePaginatedGet(Constants.REACT_QUERY.KEYS.RQ_GET_TODO_LIST, page, getUrl('GET_TODO_LIST'));\n};\n\nexport const useTodo = (match) => {\n  return useGet(Constants.REACT_QUERY.KEYS.GET_TODO_BY_ID, getUrl('GET_TODO_BY_ID', [{ value: match.params.id }]));\n};\n","import React from 'react';\n\nimport { Button } from '@ui5/webcomponents-react/lib/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { useHistory } from 'react-router-dom';\nimport { spacing } from '@ui5/webcomponents-react-base';\n\nimport i18n from '../../util/i18n';\n\nconst NavBack = ({ text = i18n.t('components.navback.text'), icon = 'nav-back', design = ButtonDesign.Transparent, disabled = false }) => {\n  const history = useHistory();\n\n  return (\n    <FlexBox style={spacing.sapUiTinyMargin}>\n      <Button data-testid=\"navback-wrapper\" design={design} disabled={disabled} icon={icon} iconEnd={false} onClick={() => history.goBack()} submits={false}>\n        {text}\n      </Button>\n    </FlexBox>\n  );\n};\n\nexport default NavBack;\n\nexport const NavBackIcon = {\n  NONE: '',\n};\n"],"sourceRoot":""}