{"version":3,"sources":["auth/ComponentWithAuthorizationRestriction.js","components/Pagination/Pagination.js","pages/Todo/List/TodoListPaginatedItems.js","pages/Todo/List/TodoList.js","../../src/enums/ButtonDesign.ts","../../src/webComponents/Button/index.tsx","../../src/webComponents/StandardListItem/index.tsx","components/Layout/CenteredContent.js","hooks/services/useTodos.js"],"names":["ComponentWithAuthorizationRestriction","allowedAuthorities","authorityKey","children","useHasAccess","Pagination","shouldDisableAll","numberOfElements","totalPages","selectedPage","setPage","style","spacing","sapUiMediumMargin","disablePrevious","disableNext","previousPage","morePreviousPage","nextPage","moreNextPage","hasPreviousPage","hasMorePreviousPages","hasNextPage","hasMoreNextPages","FlexBox","data-testid","alignItems","FlexBoxAlignItems","Start","justifyContent","FlexBoxJustifyContent","Center","Button","disabled","design","ButtonDesign","Transparent","onClick","sapUiTinyMarginEnd","Emphasized","TodoListPaginatedItems","history","useHistory","useState","page","useTodos","resolvedData","isLoading","BusyIndicator","active","Title","level","TitleLevel","H5","totalElements","List","onItemClick","e","push","getUrl","value","detail","item","dataset","id","redirectToEditPage","content","map","todo","index","StandardListItem","data-id","iconEnd","info","description","infoState","selected","name","number","params","TodoList","CenteredContent","Helmet","title","H1","H3","Link","Text","isMobile","isTablet","isDesktop","isChrome","isIE","withWebComponent","iconSize","submits","ValueState","type","ListItemTypes","centered","minWidth","padding","margin","props","usePaginatedGet","Constants","REACT_QUERY","KEYS","RQ_GET_TODO_LIST","useTodo","match","useGet","GET_TODO_BY_ID"],"mappings":"0PAWeA,EAT+B,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,mBAAoBC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAEjF,OADkBC,YAAaH,EAAoBC,GAK5CC,EAHE,M,2GCKEE,EAAa,SAAC,GAAkH,IAAhHC,EAA+G,EAA/GA,iBAAkBC,EAA6F,EAA7FA,iBAAkBC,EAA2E,EAA3EA,WAAYC,EAA+D,EAA/DA,aAAcC,EAAiD,EAAjDA,QAAiD,IAAxCC,aAAwC,MAAhCC,IAAQC,kBAAwB,EAC1I,IAAKN,EAAkB,OAAO,KAE9B,IAAIO,GAAkB,EACD,IAAjBL,IACFK,GAAkB,GAEpB,IAAIC,GAAc,EACdN,IAAiBD,EAAa,IAChCO,GAAc,GAEhB,IAAMC,EAAeP,EAAe,EAC9BQ,EAAmBD,EAAe,EAClCE,EAAWT,EAAe,EAC1BU,EAAeD,EAAW,EAC1BE,EAAkBX,EAAe,EACjCY,EAAuBZ,EAAe,EACtCa,EAAcb,EAAeD,EAAa,EAC1Ce,EAAmBd,EAAeD,EAAa,EAUrD,OACE,eAACgB,EAAA,EAAD,CAASC,cAAY,qBAAqBC,WAAYC,IAAkBC,MAAOjB,MAAOA,EAAOkB,eAAgBC,IAAsBC,OAAnI,UACE,cAACC,EAAA,EAAD,CAAQP,cAAY,+BAA+BQ,SAAUnB,GAAmBR,EAAkB4B,OAAQC,IAAaC,YAAaC,QAVhH,WACjBvB,GAAiBJ,EAAQD,EAAe,IAS3C,SACG,MAGFY,GACC,cAACW,EAAA,EAAD,CACEP,cAAY,sCACZQ,SAAU3B,EACV4B,OAAQC,IAAaC,YACrBzB,MAAOC,IAAQ0B,mBACfD,QAAS,kBAAM3B,EAAQO,IALzB,SAOGA,EAAmB,IAIvBG,GACC,cAACY,EAAA,EAAD,CAAQP,cAAY,kCAAkCQ,SAAU3B,EAAkB4B,OAAQC,IAAaC,YAAazB,MAAOC,IAAQ0B,mBAAoBD,QAAS,kBAAM3B,EAAQM,IAA9K,SACGA,EAAe,IAIpB,cAACgB,EAAA,EAAD,CAAQP,cAAY,kCAAkCQ,SAAU3B,EAAkBK,MAAOC,IAAQ0B,mBAAoBJ,OAAQC,IAAaI,WAA1I,SACG9B,EAAe,IAGjBa,GACC,cAACU,EAAA,EAAD,CAAQP,cAAY,8BAA8BQ,SAAU3B,EAAkB4B,OAAQC,IAAaC,YAAazB,MAAOC,IAAQ0B,mBAAoBD,QAAS,kBAAM3B,EAAQQ,IAA1K,SACGA,EAAW,IAIfK,GACC,cAACS,EAAA,EAAD,CAAQP,cAAY,kCAAkCQ,SAAU3B,EAAkB4B,OAAQC,IAAaC,YAAazB,MAAOC,IAAQ0B,mBAAoBD,QAAS,kBAAM3B,EAAQS,IAA9K,SACGA,EAAe,IAIpB,cAACa,EAAA,EAAD,CAAQP,cAAY,gCAAgCQ,SAAUlB,GAAeT,EAAkB4B,OAAQC,IAAaC,YAAaC,QA5CjH,WACbtB,GAAaL,EAAQD,EAAe,IA2CvC,SACG,UCnCM+B,EA/BgB,WAC7B,IAAMC,EAAUC,cADmB,EAEXC,mBAAS,GAFE,mBAE5BC,EAF4B,KAEtBlC,EAFsB,OAGCmC,YAASD,GAArCE,EAH2B,EAG3BA,aAAcC,EAHa,EAGbA,UAMtB,OACE,8BACGA,EACC,cAACC,EAAA,EAAD,CAAeC,QAAM,IAErB,qCACE,cAACC,EAAA,EAAD,CAAOC,MAAOC,IAAWC,GAAzB,4BAA0CP,EAAavC,iBAAvD,cAA6EuC,EAAaQ,cAA1F,OACA,uBACA,cAACC,EAAA,EAAD,CAAMC,YAAa,SAACC,GAAD,OAZA,SAACA,GAC1BhB,EAAQiB,KAAKC,YAAO,YAAa,CAAC,CAAEC,MAAOH,EAAEI,OAAOC,KAAKC,QAAQC,OAWjCC,CAAmBR,IAA7C,SACGX,EAAaoB,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACxB,cAACC,EAAA,EAAD,CAAkBC,UAASH,EAAKJ,GAAgBQ,SAAS,EAAOC,KAAML,EAAKM,YAAaC,UAAU,OAAOC,UAAU,EAAnH,SACGR,EAAKS,MADiCR,QAK7C,cAAC,EAAD,CAAY9D,iBAAkBuC,EAAavC,iBAAkBC,WAAYsC,EAAatC,WAAYC,aAAcqC,EAAagC,OAAQpE,QAAS,SAACqE,GAAD,OAAYrE,EAAQqE,YC0B7JC,UAjDE,WACf,IAAMvC,EAAUC,cAEhB,OACE,eAACuC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,MAAM,wBACd,cAACjC,EAAA,EAAD,CAAOC,MAAOC,IAAWgC,GAAzB,uBACA,uBAEA,cAAClC,EAAA,EAAD,CAAOC,MAAOC,IAAWiC,GAAzB,qBACA,uBACA,cAACC,EAAA,EAAD,CAAMjD,QAAS,kBAAMI,EAAQiB,KAAK,eAAlC,gCACA,uBACA,cAAC4B,EAAA,EAAD,CAAMjD,QAAS,kBAAMI,EAAQiB,KAAKC,YAAO,WAAzC,6BACA,uBACA,uBACA,eAAC,EAAD,CAAuC1D,mBAAoB,CAAC,4BAA6BC,aAAa,cAAtG,UACE,cAACgD,EAAA,EAAD,CAAOC,MAAOC,IAAWiC,GAAzB,iCACA,4BACE,cAACE,EAAA,EAAD,8GAIJ,cAACrC,EAAA,EAAD,CAAOC,MAAOC,IAAWiC,GAAzB,2BACA,4BACE,cAACE,EAAA,EAAD,UAAOC,cAAa,mCAAqC,2CAE3D,4BACE,cAACD,EAAA,EAAD,UAAOE,cAAa,mCAAqC,2CAE3D,4BACE,cAACF,EAAA,EAAD,UAAOG,cAAc,oCAAsC,4CAG7D,cAACxC,EAAA,EAAD,CAAOC,MAAOC,IAAWiC,GAAzB,4BACA,4BACE,cAACE,EAAA,EAAD,UAAOI,cAAa,wCAA0C,oDAEhE,4BACE,cAACJ,EAAA,EAAD,UAAOK,cAAS,oCAAsC,gDAGxD,cAAC1C,EAAA,EAAD,CAAOC,MAAOC,IAAWiC,GAAzB,kEACA,uBACA,cAAC,EAAD,S,qCC1DMlD,E,2CAAAA,yH,CAAAA,Y,wFC2DNH,G,OAA8B6D,YAAgB,aAElD,CAAC,SAAU,OAFuC,YAGlD,CAAC,WAAY,UAHqC,cAKlD,CALkD,WAQpD7D,uBAEAA,eAAsB,CACpBE,OAAQC,IADY,QAEpBF,UAFoB,EAGpBuC,SAHoB,EAIpBsB,cAJoB,EAKpBC,SAAS,I,iGCTLzB,G,OAAkDuB,YAAgB,SAEtE,CAAC,cAAe,OAAQ,QAAS,OAAQ,YAF6B,QAGtE,CAAC,UAHqE,eAKtE,CALsE,kBAQxEvB,iCAEAA,eAAgC,CAC9BE,SAD8B,EAE9BG,UAAWqB,IAFmB,KAG9BC,KAAMC,IAHwB,OAI9BtB,UAAU,I,oEC5ENjE,EAAQ,CACZwF,SAAU,CACRC,SAAUZ,cAAa,MAAQ,MAC/Ba,QAAS,OACTC,OAAQ,WAYGrB,IARS,SAACsB,GACvB,OACE,6CAAK9E,cAAY,mBAAmBd,MAAOA,EAAMwF,UAAcI,GAA/D,aACGA,EAAMpG,c,iCCdb,mGAKa0C,EAAW,SAACD,GACvB,OAAO4D,YAAgBC,IAAUC,YAAYC,KAAKC,iBAAkBhE,EAAMe,YAAO,mBAGtEkD,EAAU,SAACC,GACtB,OAAOC,YAAON,IAAUC,YAAYC,KAAKK,eAAgBrD,YAAO,iBAAkB,CAAC,CAAEC,MAAOkD,EAAM/B,OAAOf","file":"static/js/10.75025c15.chunk.js","sourcesContent":["import { useHasAccess } from '../hooks/useAuthority';\n\nconst ComponentWithAuthorizationRestriction = ({ allowedAuthorities, authorityKey, children }) => {\n  const hasAccess = useHasAccess(allowedAuthorities, authorityKey);\n  if (!hasAccess) {\n    return null;\n  }\n\n  return children;\n};\n\nexport default ComponentWithAuthorizationRestriction;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/lib/FlexBoxAlignItems';\nimport { Button } from '@ui5/webcomponents-react/lib/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react/lib/FlexBoxJustifyContent';\nimport { spacing } from '@ui5/webcomponents-react-base';\n\nexport const Pagination = ({ shouldDisableAll, numberOfElements, totalPages, selectedPage, setPage, style = spacing.sapUiMediumMargin }) => {\n  if (!numberOfElements) return null;\n\n  let disablePrevious = false;\n  if (selectedPage === 0) {\n    disablePrevious = true;\n  }\n  let disableNext = false;\n  if (selectedPage === totalPages - 1) {\n    disableNext = true;\n  }\n  const previousPage = selectedPage - 1;\n  const morePreviousPage = previousPage - 1;\n  const nextPage = selectedPage + 1;\n  const moreNextPage = nextPage + 1;\n  const hasPreviousPage = selectedPage > 0;\n  const hasMorePreviousPages = selectedPage > 1;\n  const hasNextPage = selectedPage < totalPages - 1;\n  const hasMoreNextPages = selectedPage < totalPages - 2;\n\n  const setPreviousPage = () => {\n    if (!disablePrevious) setPage(selectedPage - 1);\n  };\n\n  const setNextPage = () => {\n    if (!disableNext) setPage(selectedPage + 1);\n  };\n\n  return (\n    <FlexBox data-testid=\"pagination-wrapper\" alignItems={FlexBoxAlignItems.Start} style={style} justifyContent={FlexBoxJustifyContent.Center}>\n      <Button data-testid=\"leftarrow-pagination-wrapper\" disabled={disablePrevious || shouldDisableAll} design={ButtonDesign.Transparent} onClick={setPreviousPage}>\n        {'<'}\n      </Button>\n\n      {hasMorePreviousPages && (\n        <Button\n          data-testid=\"morePreviousPage-pagination-wrapper\"\n          disabled={shouldDisableAll}\n          design={ButtonDesign.Transparent}\n          style={spacing.sapUiTinyMarginEnd}\n          onClick={() => setPage(morePreviousPage)}\n        >\n          {morePreviousPage + 1}\n        </Button>\n      )}\n\n      {hasPreviousPage && (\n        <Button data-testid=\"previousPage-pagination-wrapper\" disabled={shouldDisableAll} design={ButtonDesign.Transparent} style={spacing.sapUiTinyMarginEnd} onClick={() => setPage(previousPage)}>\n          {previousPage + 1}\n        </Button>\n      )}\n\n      <Button data-testid=\"selectedPage-pagination-wrapper\" disabled={shouldDisableAll} style={spacing.sapUiTinyMarginEnd} design={ButtonDesign.Emphasized}>\n        {selectedPage + 1}\n      </Button>\n\n      {hasNextPage && (\n        <Button data-testid=\"nextPage-pagination-wrapper\" disabled={shouldDisableAll} design={ButtonDesign.Transparent} style={spacing.sapUiTinyMarginEnd} onClick={() => setPage(nextPage)}>\n          {nextPage + 1}\n        </Button>\n      )}\n\n      {hasMoreNextPages && (\n        <Button data-testid=\"moreNextPage-pagination-wrapper\" disabled={shouldDisableAll} design={ButtonDesign.Transparent} style={spacing.sapUiTinyMarginEnd} onClick={() => setPage(moreNextPage)}>\n          {moreNextPage + 1}\n        </Button>\n      )}\n\n      <Button data-testid=\"afterarrow-pagination-wrapper\" disabled={disableNext || shouldDisableAll} design={ButtonDesign.Transparent} onClick={setNextPage}>\n        {'>'}\n      </Button>\n    </FlexBox>\n  );\n};\n\nPagination.propTypes = {\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  selectedPage: PropTypes.number,\n  setPage: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTodos } from '../../../hooks/services/useTodos';\n\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { BusyIndicator } from '@ui5/webcomponents-react/lib/BusyIndicator';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/lib/TitleLevel';\nimport { Pagination } from '../../../components/Pagination/Pagination';\n\nimport { getUrl } from '../../../util/browser/BrowserProvider';\n\nconst TodoListPaginatedItems = () => {\n  const history = useHistory();\n  const [page, setPage] = useState(0);\n  const { resolvedData, isLoading } = useTodos(page);\n\n  const redirectToEditPage = (e) => {\n    history.push(getUrl('TODO_EDIT', [{ value: e.detail.item.dataset.id }]));\n  };\n\n  return (\n    <div>\n      {isLoading ? (\n        <BusyIndicator active />\n      ) : (\n        <>\n          <Title level={TitleLevel.H5}>{`Records (${resolvedData.numberOfElements} / ${resolvedData.totalElements})`}</Title>\n          <br />\n          <List onItemClick={(e) => redirectToEditPage(e)}>\n            {resolvedData.content.map((todo, index) => (\n              <StandardListItem data-id={todo.id} key={index} iconEnd={false} info={todo.description} infoState=\"None\" selected={false}>\n                {todo.name}\n              </StandardListItem>\n            ))}\n          </List>\n          <Pagination numberOfElements={resolvedData.numberOfElements} totalPages={resolvedData.totalPages} selectedPage={resolvedData.number} setPage={(params) => setPage(params)} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TodoListPaginatedItems;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useHistory } from 'react-router-dom';\nimport { isChrome, isMobile, isTablet, isDesktop, isIE } from '@ui5/webcomponents-base/dist/Device';\n\nimport { Link } from '@ui5/webcomponents-react/lib/Link';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/lib/TitleLevel';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport { getUrl } from '../../../util/browser/BrowserProvider';\nimport ComponentWithAuthorizationRestriction from '../../../auth/ComponentWithAuthorizationRestriction';\nimport CenteredContent from '../../../components/Layout/CenteredContent';\nimport TodoListPaginatedItems from './TodoListPaginatedItems';\n\nconst TodoList = () => {\n  const history = useHistory();\n\n  return (\n    <CenteredContent>\n      <Helmet title=\"List - TodoList App\" />\n      <Title level={TitleLevel.H1}>Todo List</Title>\n      <br />\n\n      <Title level={TitleLevel.H3}>Routing</Title>\n      <br />\n      <Link onClick={() => history.push('/dontexist')}>Test NotFound Page</Link>\n      <br />\n      <Link onClick={() => history.push(getUrl('BUGGY'))}>Test Error Page</Link>\n      <br />\n      <br />\n      <ComponentWithAuthorizationRestriction allowedAuthorities={['canAccessDropApplication']} authorityKey=\"permissions\">\n        <Title level={TitleLevel.H3}>Component Validator</Title>\n        <p>\n          <Text>Drop Application (this is a restricted text and you should not see unless you have access)</Text>\n        </p>\n      </ComponentWithAuthorizationRestriction>\n\n      <Title level={TitleLevel.H3}>Device Detect</Title>\n      <p>\n        <Text>{isMobile() ? 'This text appears when is MOBILE' : 'This text appears when is not MOBILE'}</Text>\n      </p>\n      <p>\n        <Text>{isTablet() ? 'This text appears when is TABLET' : 'This text appears when is not TABLET'}</Text>\n      </p>\n      <p>\n        <Text>{isDesktop() ? 'This text appears when is DESKTOP' : 'This text appears when is not DESKTOP'}</Text>\n      </p>\n\n      <Title level={TitleLevel.H3}>Browser Detect</Title>\n      <p>\n        <Text>{isChrome() ? 'This Text is rendered only for CHROME' : 'This Text is rendered only when is NOT CHROME'}</Text>\n      </p>\n      <p>\n        <Text>{isIE() ? 'This Text is rendered only for IE' : 'This Text is rendered only when is NOT IE'}</Text>\n      </p>\n\n      <Title level={TitleLevel.H3}>Lazy Loading + Pagination + Edition (Formik and Yup)</Title>\n      <br />\n      <TodoListPaginatedItems />\n    </CenteredContent>\n  );\n};\n\nexport default TodoList;\n","export enum ButtonDesign {\n  Default = 'Default',\n  Positive = 'Positive',\n  Negative = 'Negative',\n  Transparent = 'Transparent',\n  Emphasized = 'Emphasized'\n}\n","import { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/Button';\nimport { FC, ReactNode } from 'react';\n\nexport interface ButtonPropTypes extends Omit<WithWebComponentPropTypes, 'onClick'> {\n  /**\n   * Defines the `Button` design.\n   *\n   * **Note:** Available options are \"Default\", \"Emphasized\", \"Positive\", \"Negative\", and \"Transparent\".\n   */\n  design?: ButtonDesign;\n  /**\n   * Defines whether the `Button` is disabled (default is set to `false`). A disabled `Button` can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon to be displayed as graphical element within the `Button`. The SAP-icons font provides numerous options.\n   *\n   * Example:\n   *\n   * Button icon=\"palette\"\n   *\n   * See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the icon should be displayed after the `Button` text.\n   */\n  iconEnd?: boolean;\n  /**\n   * Defines the size of the icon inside the `Button`.\n   */\n  iconSize?: string;\n  /**\n   * When set to `true`, the `Button` will automatically submit the nearest form element upon `press`.\n   *\n   * **Important:** For the `submits` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  submits?: boolean;\n  /**\n   * Defines the text of the `Button`.\n   *\n   * **Note:** Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the `Button` is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: (event: CustomEvent) => void;\n}\n\n/**\n * The `Button` component represents a simple push button. It enables users to trigger actions by clicking or tapping the `Button`, or by pressing certain keyboard keys, such as Enter.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/Button\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst Button: FC<ButtonPropTypes> = withWebComponent<ButtonPropTypes>(\n  'ui5-button',\n  ['design', 'icon', 'iconSize'],\n  ['disabled', 'iconEnd', 'submits'],\n  [],\n  ['click']\n);\n\nButton.displayName = 'Button';\n\nButton.defaultProps = {\n  design: ButtonDesign.Default,\n  disabled: false,\n  iconEnd: false,\n  iconSize: undefined,\n  submits: false\n};\n\nexport { Button };\n","import { ListItemTypes } from '@ui5/webcomponents-react/lib/ListItemTypes';\nimport { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/StandardListItem';\nimport { FC, ReactNode } from 'react';\n\nexport interface StandardListItemPropTypes extends WithWebComponentPropTypes {\n  /**\n   * Defines the description displayed right under the item text, if such is present.\n   */\n  description?: string;\n  /**\n   * Defines the `icon` source URI.\n   *\n   * **Note:** SAP-icons font provides numerous buil-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the `icon` should be displayed in the beginning of the list item or in the end.\n   *\n   * **Note:** If `image` is set, the `icon` would be displayed after the `image`.\n   */\n  iconEnd?: boolean;\n  /**\n   * Defines the `image` source URI.\n   *\n   * **Note:** The `image` would be displayed in the beginning of the list item.\n   */\n  image?: string;\n  /**\n   * Defines the `info`, displayed in the end of the list item.\n   */\n  info?: string;\n  /**\n   * Defines the state of the `info`.\n   * Available options are: `\"None\"` (by default), `\"Success\"`, `\"Warning\"`, `\"Information\"` and `\"Erorr\"`.\n   */\n  infoState?: ValueState;\n  /**\n   * Defines the visual indication and behavior of the list items. Available options are `Active` (by default), `Inactive` and `Detail`.\n   *\n   * **Note:** When set to `Active`, the item will provide visual response upon press and hover, while with type `Inactive` and `Detail` - will not.\n   */\n  type?: ListItemTypes;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n  /**\n   * Defines the text of the `StandardListItem`.\n   *\n   * **Note:** Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the user clicks on the detail button when type is `Detail`.\n   */\n  onDetailClick?: (event: CustomEvent) => void;\n}\n\n/**\n * The `StandardListItem` represents the simplest type of item for a `StandardListItemst`. This is a list item, providing the most common use cases such as `text`, `image` and `icon`\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/StandardListItem\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst StandardListItem: FC<StandardListItemPropTypes> = withWebComponent<StandardListItemPropTypes>(\n  'ui5-li',\n  ['description', 'icon', 'image', 'info', 'infoState', 'type'],\n  ['iconEnd', 'selected'],\n  [],\n  ['detail-click']\n);\n\nStandardListItem.displayName = 'StandardListItem';\n\nStandardListItem.defaultProps = {\n  iconEnd: false,\n  infoState: ValueState.None,\n  type: ListItemTypes.Active,\n  selected: false\n};\n\nexport { StandardListItem };\n","import React from 'react';\nimport { isMobile } from '@ui5/webcomponents-base/dist/Device';\n\nconst style = {\n  centered: {\n    minWidth: isMobile() ? '80%' : '50%',\n    padding: '1rem',\n    margin: '0 auto',\n  },\n};\n\nconst CenteredContent = (props) => {\n  return (\n    <div data-testid=\"centered-content\" style={style.centered} {...props}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default CenteredContent;\n","import Constants from '../../util/Constants';\n\nimport { usePaginatedGet, useGet } from '../../hooks/useRequest';\nimport { getUrl } from '../../util/api/url/APIProvider';\n\nexport const useTodos = (page) => {\n  return usePaginatedGet(Constants.REACT_QUERY.KEYS.RQ_GET_TODO_LIST, page, getUrl('GET_TODO_LIST'));\n};\n\nexport const useTodo = (match) => {\n  return useGet(Constants.REACT_QUERY.KEYS.GET_TODO_BY_ID, getUrl('GET_TODO_BY_ID', [{ value: match.params.id }]));\n};\n"],"sourceRoot":""}