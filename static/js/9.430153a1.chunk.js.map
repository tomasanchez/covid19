{"version":3,"sources":["util/model/Formatter.js","components/Cards/ContinentsCard/ContinentsList.jsx","components/Cards/ContinentsCard/ContinentsChart.jsx","components/Cards/ContinentsCard/ContinentsKPIs.jsx","components/Cards/ContinentsCard/ContinentsCard.jsx","components/Cards/CountriesCard/CountriesList.jsx","components/Cards/CountriesCard/CountriesTable.jsx","components/Cards/CountriesCard/CountriesCard.jsx","pages/Overview/Dashboard/Dashboard.jsx"],"names":["Formatter","covidCasesContinent","iCases","sValueState","ValueState","None","Warning","Error","Information","covidCasesCountries","Success","covidRecovered","localeNumber","number","Intl","NumberFormat","format","style","countryCard","width","continentItem","height","ContinentsList","items","loading","t","useTranslation","useState","aContinents","setEntitySet","useEffect","length","aResults","map","i","List","separators","ListSeparators","Inner","Loader","oContinent","iKey","StandardListItem","datatype","description","population","info","todayCases","infoState","selected","data-id","continent","type","FlexBox","Title","level","TitleLevel","H4","Icon","name","ContinentsChart","sort","oContinentA","oContinentB","cases","PieChart","chartConfig","innerRadius","outerRadius","activeSegment","showActiveSegmentDataLabel","dataset","dimension","accessor","formatter","measure","noAnimation","KPIstyles","marginBottom","KPI","title","value","unit","valueState","arrow","subtitle","AnalyticalCard","header","AnalyticalCardHeader","arrowIndicator","subTitle","counter","indicatorState","ContinentsKPIs","reduce","acc","oItem","iRecovered","todayRecovered","iDeaths","todayDeaths","iCritical","parseFloat","criticalPerOneMillion","toFixed","direction","FlexBoxDirection","Column","continentsCard","ContinetsCard","bList","changeContent","bLoading","setLoading","Request","read","then","oResponse","data","forEach","Card","heading","avatar","subheading","headerInteractive","onHeaderClick","setTimeout","tooltip","listItem","list","CountriesList","aCountries","self","oCountry","image","countryInfo","flag","wrap","FlexBoxWrap","country","ProgressIndicator","recovered","Label","iso2","ObjectNumber","ttip","fvalue","alignItems","FlexBoxAlignItems","Center","spacing","sapUiContentPadding","ObjectStatus","state","Columns","Header","Cell","cell","alt","src","H6","row","original","CountriesTable","fitContainer","visibleRows","AnalyticalTable","columns","scaleWidthMode","countriesCard","window","innerWidth","allCountriesCard","CountriesCard","aTopCountries","setTopCountries","aData","slice","Wrap","justifyContent","FlexBoxJustifyContent","Dashboard","Helmet","SpaceAround"],"mappings":"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","file":"static/js/9.430153a1.chunk.js","sourcesContent":["import { ValueState } from '@ui5/webcomponents-react';\n\nconst Formatter = {\n  covidCasesContinent: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 50000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 150000) sValueState = ValueState.Error;\n    } else if (iCases >= 25000) sValueState = ValueState.Information;\n\n    return sValueState;\n  },\n\n  covidCasesCountries: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 5000000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 10500000) sValueState = ValueState.Error;\n    } else if (iCases >= 1000000) sValueState = ValueState.Information;\n    else if (iCases <= 500000) sValueState = ValueState.Success;\n\n    return sValueState;\n  },\n\n  covidRecovered: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 55) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 70) {\n        sValueState = ValueState.Information;\n        if (iCases >= 90) sValueState = ValueState.Success;\n      }\n    } else if (iCases <= 45) sValueState = ValueState.Error;\n\n    return sValueState;\n  },\n\n  localeNumber: (number) => {\n    return Intl.NumberFormat().format(number);\n  },\n};\n\nexport default Formatter;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { FlexBox, Icon, ListSeparators, Loader, Title, TitleLevel } from '@ui5/webcomponents-react';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  countryCard: {\n    width: '20rem',\n  },\n\n  continentItem: {\n    height: '4rem',\n  },\n};\n\nconst ContinentsList = ({ items, loading }) => {\n  const { t } = useTranslation();\n\n  const [aContinents, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <List separators={ListSeparators.Inner}>\n      {loading && <Loader />}\n      {aContinents.map((oContinent, iKey) => (\n        <StandardListItem\n          key={iKey}\n          datatype={oContinent}\n          description={t('description.population') + oContinent.population}\n          style={style.continentItem}\n          info={Formatter.localeNumber(oContinent.todayCases)}\n          infoState={Formatter.covidCasesContinent(oContinent.todayCases)}\n          selected=\"false\"\n          data-id={oContinent.continent}\n          type=\"Inactive\"\n        >\n          <FlexBox>\n            <Title level={TitleLevel.H4}>{t(oContinent.continent)}</Title>\n          </FlexBox>\n          <Icon name=\"group\" />\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContinentsList;\n","import React, { useEffect, useState } from 'react';\nimport { PieChart } from '@ui5/webcomponents-react-charts';\nimport { useTranslation } from 'react-i18next';\nimport Formatter from '../../../util/model/Formatter';\n\nconst ContinentsChart = ({ items, loading }) => {\n  const [aContinents, setEntitySet] = useState([]);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      aResults.sort((oContinentA, oContinentB) => oContinentB.cases - oContinentA.cases);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <PieChart\n      loading={loading}\n      chartConfig={{\n        innerRadius: '45%',\n        outerRadius: '80%',\n        activeSegment: 0,\n        showActiveSegmentDataLabel: true,\n      }}\n      dataset={aContinents}\n      dimension={{\n        accessor: 'continent',\n        formatter: t,\n      }}\n      measure={{\n        accessor: 'cases',\n        formatter: Formatter.localeNumber,\n      }}\n      style={{\n        width: '100%',\n      }}\n      noAnimation={false}\n    />\n  );\n};\n\nexport default ContinentsChart;\n","import { AnalyticalCard, AnalyticalCardHeader, FlexBox, FlexBoxDirection, ValueState } from '@ui5/webcomponents-react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next/';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  KPIstyles: {\n    height: '6.5rem',\n    width: '15rem',\n    marginBottom: '1rem',\n  },\n};\n\nconst KPI = ({ title, value, unit, valueState, arrow, subtitle }) => {\n  const { t } = useTranslation();\n\n  return (\n    <AnalyticalCard\n      header={\n        <AnalyticalCardHeader\n          arrowIndicator={arrow ? arrow : 'Up'}\n          subTitle={t(subtitle)}\n          counter={t('counterKPI')}\n          indicatorState={valueState ? valueState : ValueState.None}\n          title={t(title)}\n          unit={t(unit)}\n          value={Formatter.localeNumber(value)}\n          valueState={valueState ? valueState : ValueState.None}\n        />\n      }\n      style={style.KPIstyles}\n    />\n  );\n};\n\nconst ContinentsKPIs = ({ items }) => {\n  const { t } = useTranslation();\n\n  const iCases = items ? items.reduce((acc, oItem) => acc + oItem.todayCases, 0) : 0;\n  const iRecovered = items ? items.reduce((acc, oItem) => acc + oItem.todayRecovered, 0) : 0;\n  const iDeaths = items ? items.reduce((acc, oItem) => acc + oItem.todayDeaths, 0) : 0;\n  const iCritical = items ? parseFloat(items.reduce((acc, oItem) => acc + oItem.criticalPerOneMillion, 0)).toFixed(2) : 0;\n\n  return (\n    <FlexBox direction={FlexBoxDirection.Column}>\n      <KPI title=\"casesKPITitle\" unit=\"casesKPIUnit\" value={iCases} />\n      <KPI title=\"criticalKPITitle\" unit=\"casesKPIUnit\" value={iCritical} valueState={ValueState.Warning} subtitle=\"criticalKPISubtitle\" />\n      <KPI title=\"recoveredKPITitle\" unit=\"recoveredKPIUnit\" value={iRecovered} valueState={ValueState.Success} />\n      <KPI title=\"deathsKPITTitle\" unit=\"deathsKPIUnit\" value={iDeaths} valueState={ValueState.Error} />\n    </FlexBox>\n  );\n};\n\nexport default ContinentsKPIs;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport ContinetsList from './ContinentsList';\nimport ContinentsChart from './ContinentsChart';\nimport Request from '../../../util/api/engine/Request';\nimport ContinentsKPIs from './ContinentsKPIs';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  continentsCard: {\n    width: '400px',\n    height: '29.5rem',\n    marginBottom: '1rem',\n  },\n};\n\nconst ContinetsCard = () => {\n  const { t } = useTranslation();\n\n  const [bList, changeContent] = useState(false);\n  const [bLoading, setLoading] = useState(false);\n  const [aContinents, setEntitySet] = useState([]);\n\n  const onChangeView = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setLoading(false);\n      changeContent(!bList);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      Request.read('ContinentsSet').then((oResponse) => {\n        oResponse.data.forEach((oContinent) => (oContinent.population = Formatter.localeNumber(oContinent.population)));\n        setEntitySet(oResponse.data);\n      });\n    }\n  }, [aContinents.length]);\n\n  return (\n    <>\n      <Card\n        heading={t('continentsCardHeader')}\n        avatar={<Icon name=\"globe\" />}\n        subheading={bList ? t('continentsCardSubHeaderList') : t('continentsCardSubHeaderChart')}\n        style={style.continentsCard}\n        headerInteractive\n        onHeaderClick={onChangeView}\n        tooltip={t('continentsCardTol')}\n      >\n        {bList ? <ContinetsList items={aContinents} loading={bLoading} /> : <ContinentsChart items={aContinents} loading={bLoading} />}\n      </Card>\n      <ContinentsKPIs items={aContinents} />\n    </>\n  );\n};\n\nexport default ContinetsCard;\n","import { StandardListItem, List, FlexBox, Title, TitleLevel, ProgressIndicator, FlexBoxWrap, Label, FlexBoxDirection, ListSeparators } from '@ui5/webcomponents-react';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState, useEffect } from 'react';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  listItem: {\n    height: '4rem',\n  },\n  list: { height: '20rem' },\n};\n\nconst CountriesList = ({ items }) => {\n  const { t } = useTranslation();\n\n  const [aCountries, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      var aResults = items.map((self) => self);\n      setEntitySet(aResults);\n    }\n  }, [aCountries.length, items]);\n\n  return (\n    <List style={style.list} separators={ListSeparators.Inner}>\n      {aCountries.map((oCountry) => (\n        <StandardListItem\n          style={style.listItem}\n          key={oCountry.countryInfo.iso2}\n          info={Formatter.localeNumber(oCountry.cases)}\n          infoState={Formatter.covidCasesCountries(oCountry.cases)}\n          image={oCountry.countryInfo.flag}\n        >\n          <FlexBox wrap={FlexBoxWrap} direction={FlexBoxDirection.Column}>\n            <Title level={TitleLevel.H4}>{oCountry.country}</Title>\n            <ProgressIndicator value={(oCountry.recovered / oCountry.cases) * 100} valueState={Formatter.covidRecovered((oCountry.recovered / oCountry.cases) * 100)} />\n            <Label>{t('listRecoveredLabel')}</Label>\n          </FlexBox>\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default CountriesList;\n","import React from 'react';\nimport { spacing } from '@ui5/webcomponents-react-base';\nimport { AnalyticalTable, FlexBox, FlexBoxAlignItems, FlexBoxJustifyContent, FlexBoxWrap, ObjectStatus, Text, Title, TitleLevel } from '@ui5/webcomponents-react';\nimport { useTranslation } from 'react-i18next';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {};\n\nconst ObjectNumber = ({ value, formatter, ttip, fvalue }) => {\n  return (\n    <FlexBox alignItems={FlexBoxAlignItems.Center} wrap={FlexBoxWrap} style={spacing.sapUiContentPadding}>\n      <ObjectStatus state={formatter ? (fvalue ? formatter(fvalue) : formatter(value)) : 'None'} tooltip={!value ? ttip : ''}>\n        {Formatter.localeNumber(value)}\n      </ObjectStatus>\n    </FlexBox>\n  );\n};\n\nconst Columns = () => {\n  const { t } = useTranslation();\n  return [\n    {\n      Header: t('countryColumnHeader'),\n      accessor: 'countryInfo.flag',\n      Cell: (cell) => {\n        return (\n          <FlexBox alignItems={FlexBoxAlignItems.Center} wrap={FlexBoxWrap} style={spacing.sapUiContentPadding}>\n            <img alt={t('loadingFlag')} src={cell.value} height=\"30px\" width=\"45px\" />\n            <Title level={TitleLevel.H6} style={spacing.sapUiContentPadding}>\n              {cell.cell.row.original.country}\n            </Title>\n          </FlexBox>\n        );\n      },\n    },\n    {\n      Header: t('casesColumnHeader'),\n      accessor: 'cases',\n      Cell: (cell) => {\n        return <ObjectNumber formatter={Formatter.covidCasesCountries} value={cell.value} />;\n      },\n    },\n    {\n      Header: t('recoveredColumnHeader'),\n      accessor: 'recovered',\n      Cell: (cell) => {\n        return <ObjectNumber formatter={Formatter.covidRecovered} fvalue={(cell.value * 100) / cell.cell.row.original.cases} value={cell.value} ttip={t('recoveredTooltip')} />;\n      },\n    },\n    {\n      Header: t('deceasesColumnHeader'),\n      accessor: 'deaths',\n      Cell: (cell) => {\n        return <ObjectNumber value={cell.value} />;\n      },\n    },\n  ];\n};\n\nconst CountriesTable = ({ items }) => {\n  return (\n    <FlexBox fitContainer={true} wrap={FlexBoxWrap} visibleRows={7}>\n      <AnalyticalTable data={items} columns={Columns()} scaleWidthMode=\"Smart\" />\n    </FlexBox>\n  );\n};\n\nexport default CountriesTable;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport Request from '../../../util/api/engine/Request';\nimport CountriesList from './CountriesList';\nimport { FlexBox, FlexBoxAlignItems, FlexBoxDirection, FlexBoxJustifyContent, FlexBoxWrap, Icon } from '@ui5/webcomponents-react';\nimport CountriesTable from './CountriesTable';\nimport { isMobile, isDesktop } from '@ui5/webcomponents-base/dist/Device';\n\nconst style = {\n  countriesCard: {\n    width: window.innerWidth >= 768 ? '27vw' : '400px',\n    height: '25.15rem',\n    marginBottom: '1rem',\n  },\n\n  allCountriesCard: {\n    width: window.innerWidth >= 768 ? '40vw' : '100vw',\n    height: '27.35rem',\n  },\n};\n\nconst CountriesCard = () => {\n  const { t } = useTranslation();\n  const [aCountries, setEntitySet] = useState([]);\n  const [aTopCountries, setTopCountries] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      Request.read('TopCountriesPerCasesSet').then((oResponse) => {\n        var aData = oResponse.data.map((i) => i);\n        setTopCountries(aData.slice(0, 5));\n        setEntitySet(oResponse.data);\n      });\n    }\n  }, [aCountries.length]);\n\n  return (\n    <FlexBox wrap={FlexBoxWrap.Wrap} direction={FlexBoxDirection.Column} justifyContent={FlexBoxJustifyContent.Center} alignItems={FlexBoxAlignItems.Center}>\n      <Card heading={t('countriesCardHeader')} style={style.countriesCard} avatar={<Icon name=\"list\" />}>\n        <CountriesList items={aTopCountries} />\n      </Card>\n      <Card heading={t('allCountriesCardHeader')} style={style.allCountriesCard} avatar={<Icon name=\"table-view\" />}>\n        <CountriesTable items={aCountries} />\n      </Card>\n    </FlexBox>\n  );\n};\n\nexport default CountriesCard;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n//import { useHistory } from 'react-router-dom';\nimport { spacing } from '@ui5/webcomponents-react-base';\nimport { useTranslation } from 'react-i18next';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/lib/FlexBoxWrap';\nimport ContinetsCard from '../../../components/Cards/ContinentsCard/ContinentsCard';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react';\nimport CountriesCard from '../../../components/Cards/CountriesCard/CountriesCard';\n\nconst Dashboard = () => {\n  //const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Helmet title={t('helmet.title.dashboard.overview')} />\n      <FlexBox justifyContent={FlexBoxJustifyContent.SpaceAround} style={spacing.sapUiContentPadding} wrap={FlexBoxWrap.Wrap}>\n        <ContinetsCard />\n        <CountriesCard />\n      </FlexBox>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}