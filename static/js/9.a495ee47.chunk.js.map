{"version":3,"sources":["util/model/Formatter.js","components/Cards/ContinentsCard/ContinentsList.jsx","components/Cards/ContinentsCard/ContinentsChart.jsx","components/Cards/ContinentsCard/ContinentsCard.jsx","components/Cards/CountriesCard/CountriesList.jsx","components/Cards/CountriesCard/CountriesCard.jsx","pages/Overview/Dashboard/Dashboard.jsx"],"names":["Formatter","covidCasesContinent","iCases","sValueState","ValueState","None","Warning","Error","Information","covidCasesCountries","Success","covidRecovered","style","countryCard","width","continentItem","height","ContinentsList","items","loading","t","useTranslation","useState","aContinents","setEntitySet","useEffect","length","aResults","map","i","List","Loader","oContinent","iKey","StandardListItem","datatype","description","population","info","todayCases","infoState","selected","data-id","continent","type","FlexBox","Title","level","TitleLevel","H4","Icon","name","ContinentsChart","sort","oContinentA","oContinentB","cases","PieChart","chartConfig","innerRadius","outerRadius","activeSegment","showActiveSegmentDataLabel","dataset","dimension","accessor","measure","noAnimation","continentsCard","ContinetsCard","bList","changeContent","bLoading","setLoading","Request","read","then","oResponse","data","Card","heading","avatar","subheading","headerInteractive","onHeaderClick","setTimeout","tooltip","listItem","list","CountriesList","aCountries","self","oCountry","image","countryInfo","flag","wrap","FlexBoxWrap","direction","FlexBoxDirection","Column","country","ProgressIndicator","value","recovered","valueState","Label","iso2","countriesCard","CountriesCard","slice","Dashboard","Helmet","title","justifyContent","FlexBoxJustifyContent","SpaceAround","spacing","sapUiContentPadding","Wrap"],"mappings":"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","file":"static/js/9.a495ee47.chunk.js","sourcesContent":["import { ValueState } from '@ui5/webcomponents-react';\n\nconst Formatter = {\n  covidCasesContinent: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 50000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 150000) sValueState = ValueState.Error;\n    } else if (iCases >= 25000) sValueState = ValueState.Information;\n\n    return sValueState;\n  },\n\n  covidCasesCountries: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 5000000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 10500000) sValueState = ValueState.Error;\n    } else if (iCases >= 2500000) sValueState = ValueState.Information;\n    else if (iCases <= 500000) sValueState = ValueState.Success;\n\n    return sValueState;\n  },\n\n  covidRecovered: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 55) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 70) {\n        sValueState = ValueState.Information;\n        if (iCases >= 90) sValueState = ValueState.Success;\n      }\n    } else if (iCases <= 45) sValueState = ValueState.Error;\n\n    return sValueState;\n  },\n};\n\nexport default Formatter;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { FlexBox, Icon, Loader, Title, TitleLevel } from '@ui5/webcomponents-react';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  countryCard: {\n    width: '20rem',\n  },\n\n  continentItem: {\n    height: '4rem',\n  },\n};\n\nconst ContinentsList = ({ items, loading }) => {\n  const { t } = useTranslation();\n\n  const [aContinents, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <List>\n      {loading && <Loader />}\n      {aContinents.map((oContinent, iKey) => (\n        <StandardListItem\n          key={iKey}\n          datatype={oContinent}\n          description={t('description.population') + oContinent.population}\n          style={style.continentItem}\n          info={oContinent.todayCases}\n          infoState={Formatter.covidCasesContinent(oContinent.todayCases)}\n          selected=\"false\"\n          data-id={oContinent.continent}\n          type=\"Inactive\"\n        >\n          <FlexBox>\n            <Title level={TitleLevel.H4}>{t(oContinent.continent)}</Title>\n          </FlexBox>\n          <Icon name=\"group\" />\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContinentsList;\n","import React, { useEffect, useState } from 'react';\nimport { PieChart } from '@ui5/webcomponents-react-charts';\nimport { useTranslation } from 'react-i18next';\n\nconst ContinentsChart = ({ items, loading }) => {\n  const [aContinents, setEntitySet] = useState([]);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      aResults.sort((oContinentA, oContinentB) => oContinentB.cases - oContinentA.cases);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <PieChart\n      loading={loading}\n      chartConfig={{\n        innerRadius: '45%',\n        outerRadius: '80%',\n        activeSegment: 0,\n        showActiveSegmentDataLabel: true,\n      }}\n      dataset={aContinents}\n      dimension={{\n        accessor: 'continent',\n      }}\n      measure={{\n        accessor: 'cases',\n      }}\n      style={{\n        width: '100%',\n      }}\n      noAnimation={false}\n    />\n  );\n};\n\nexport default ContinentsChart;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport ContinetsList from './ContinentsList';\nimport ContinentsChart from './ContinentsChart';\nimport Request from '../../../util/api/engine/Request';\n\nconst style = {\n  continentsCard: {\n    width: '400px',\n    height: '30rem',\n  },\n};\n\nconst ContinetsCard = () => {\n  const { t } = useTranslation();\n\n  const [bList, changeContent] = useState(false);\n  const [bLoading, setLoading] = useState(false);\n  const [aContinents, setEntitySet] = useState([]);\n\n  const onChangeView = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setLoading(false);\n      changeContent(!bList);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      Request.read('ContinentsSet').then((oResponse) => {\n        setEntitySet(oResponse.data);\n      });\n    }\n  }, [aContinents.length]);\n\n  return (\n    <Card\n      heading={t('continentsCardHeader')}\n      avatar={<Icon name=\"globe\" />}\n      subheading={bList ? t('continentsCardSubHeaderList') : t('continentsCardSubHeaderChart')}\n      style={style.continentsCard}\n      headerInteractive\n      onHeaderClick={onChangeView}\n      tooltip={t('continentsCardTol')}\n    >\n      {bList ? <ContinetsList items={aContinents} loading={bLoading} /> : <ContinentsChart items={aContinents} loading={bLoading} />}\n    </Card>\n  );\n};\n\nexport default ContinetsCard;\n","import { StandardListItem, List, FlexBox, Title, TitleLevel, ProgressIndicator, FlexBoxWrap, Label, FlexBoxDirection } from '@ui5/webcomponents-react';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState, useEffect } from 'react';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  listItem: {\n    height: '4rem',\n  },\n  list: { height: '20rem' },\n};\n\nconst CountriesList = ({ items }) => {\n  const { t } = useTranslation();\n\n  const [aCountries, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      var aResults = items.map((self) => self);\n      setEntitySet(aResults);\n    }\n  }, [aCountries.length, items]);\n\n  return (\n    <List style={style.list}>\n      {aCountries.map((oCountry) => (\n        <StandardListItem style={style.listItem} key={oCountry.countryInfo.iso2} info={oCountry.cases} infoState={Formatter.covidCasesCountries(oCountry.cases)} image={oCountry.countryInfo.flag}>\n          <FlexBox wrap={FlexBoxWrap} direction={FlexBoxDirection.Column}>\n            <Title level={TitleLevel.H4}>{oCountry.country}</Title>\n\n            <ProgressIndicator value={(oCountry.recovered / oCountry.cases) * 100} valueState={Formatter.covidRecovered((oCountry.recovered / oCountry.cases) * 100)} />\n            <Label>{t('listRecoveredLabel')}</Label>\n          </FlexBox>\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default CountriesList;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport Request from '../../../util/api/engine/Request';\nimport CountriesList from './CountriesList';\nimport { Icon } from '@ui5/webcomponents-react';\n\nconst style = {\n  countriesCard: {\n    width: '400px',\n    height: '25.5rem',\n  },\n};\n\nconst CountriesCard = () => {\n  const { t } = useTranslation();\n  const [aCountries, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      Request.read('TopCountriesPerCasesSet').then((oResponse) => {\n        setEntitySet(oResponse.data.slice(0, 5));\n      });\n    }\n  }, [aCountries.length]);\n\n  return (\n    <Card heading={t('countriesCardHeader')} style={style.countriesCard} avatar={<Icon name=\"list\" />}>\n      <CountriesList items={aCountries} />\n    </Card>\n  );\n};\n\nexport default CountriesCard;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n//import { useHistory } from 'react-router-dom';\nimport { spacing } from '@ui5/webcomponents-react-base';\nimport { useTranslation } from 'react-i18next';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/lib/FlexBoxWrap';\nimport ContinetsCard from '../../../components/Cards/ContinentsCard/ContinentsCard';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react';\nimport CountriesCard from '../../../components/Cards/CountriesCard/CountriesCard';\n\nconst Dashboard = () => {\n  //const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Helmet title={t('helmet.title.dashboard.overview')} />\n      <FlexBox justifyContent={FlexBoxJustifyContent.SpaceAround} style={spacing.sapUiContentPadding} wrap={FlexBoxWrap.Wrap}>\n        <ContinetsCard />\n        <CountriesCard />\n      </FlexBox>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}