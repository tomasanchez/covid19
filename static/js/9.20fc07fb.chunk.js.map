{"version":3,"sources":["util/model/Formatter.js","components/Cards/ContinentsCard/ContinentsList.jsx","components/Cards/ContinentsCard/ContinentsChart.jsx","components/Cards/ContinentsCard/ContinentsKPIs.jsx","components/Cards/ContinentsCard/ContinentsCard.jsx","components/Cards/CountriesCard/CountriesList.jsx","components/Cards/CountriesCard/CountriesCard.jsx","pages/Overview/Dashboard/Dashboard.jsx"],"names":["Formatter","covidCasesContinent","iCases","sValueState","ValueState","None","Warning","Error","Information","covidCasesCountries","Success","covidRecovered","style","countryCard","width","continentItem","height","ContinentsList","items","loading","t","useTranslation","useState","aContinents","setEntitySet","useEffect","length","aResults","map","i","List","Loader","oContinent","iKey","StandardListItem","datatype","description","population","info","todayCases","infoState","selected","data-id","continent","type","FlexBox","Title","level","TitleLevel","H4","Icon","name","ContinentsChart","sort","oContinentA","oContinentB","cases","PieChart","chartConfig","innerRadius","outerRadius","activeSegment","showActiveSegmentDataLabel","dataset","dimension","accessor","measure","noAnimation","KPIstyles","KPI","title","value","unit","valueState","arrow","subtitle","AnalyticalCard","header","AnalyticalCardHeader","arrowIndicator","subTitle","counter","indicatorState","ContinentsKPIs","reduce","acc","oItem","iRecovered","todayRecovered","iDeaths","todayDeaths","iCritical","parseFloat","criticalPerOneMillion","toFixed","direction","FlexBoxDirection","Column","continentsCard","ContinetsCard","bList","changeContent","bLoading","setLoading","Request","read","then","oResponse","data","Card","heading","avatar","subheading","headerInteractive","onHeaderClick","setTimeout","tooltip","listItem","list","CountriesList","aCountries","self","oCountry","image","countryInfo","flag","wrap","FlexBoxWrap","country","ProgressIndicator","recovered","Label","iso2","countriesCard","CountriesCard","slice","Dashboard","Helmet","justifyContent","FlexBoxJustifyContent","SpaceAround","spacing","sapUiContentPadding","Wrap"],"mappings":"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","file":"static/js/9.20fc07fb.chunk.js","sourcesContent":["import { ValueState } from '@ui5/webcomponents-react';\n\nconst Formatter = {\n  covidCasesContinent: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 50000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 150000) sValueState = ValueState.Error;\n    } else if (iCases >= 25000) sValueState = ValueState.Information;\n\n    return sValueState;\n  },\n\n  covidCasesCountries: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 5000000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 10500000) sValueState = ValueState.Error;\n    } else if (iCases >= 2500000) sValueState = ValueState.Information;\n    else if (iCases <= 500000) sValueState = ValueState.Success;\n\n    return sValueState;\n  },\n\n  covidRecovered: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 55) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 70) {\n        sValueState = ValueState.Information;\n        if (iCases >= 90) sValueState = ValueState.Success;\n      }\n    } else if (iCases <= 45) sValueState = ValueState.Error;\n\n    return sValueState;\n  },\n};\n\nexport default Formatter;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { FlexBox, Icon, Loader, Title, TitleLevel } from '@ui5/webcomponents-react';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  countryCard: {\n    width: '20rem',\n  },\n\n  continentItem: {\n    height: '4rem',\n  },\n};\n\nconst ContinentsList = ({ items, loading }) => {\n  const { t } = useTranslation();\n\n  const [aContinents, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <List>\n      {loading && <Loader />}\n      {aContinents.map((oContinent, iKey) => (\n        <StandardListItem\n          key={iKey}\n          datatype={oContinent}\n          description={t('description.population') + oContinent.population}\n          style={style.continentItem}\n          info={oContinent.todayCases}\n          infoState={Formatter.covidCasesContinent(oContinent.todayCases)}\n          selected=\"false\"\n          data-id={oContinent.continent}\n          type=\"Inactive\"\n        >\n          <FlexBox>\n            <Title level={TitleLevel.H4}>{t(oContinent.continent)}</Title>\n          </FlexBox>\n          <Icon name=\"group\" />\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContinentsList;\n","import React, { useEffect, useState } from 'react';\nimport { PieChart } from '@ui5/webcomponents-react-charts';\nimport { useTranslation } from 'react-i18next';\n\nconst ContinentsChart = ({ items, loading }) => {\n  const [aContinents, setEntitySet] = useState([]);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      aResults.sort((oContinentA, oContinentB) => oContinentB.cases - oContinentA.cases);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <PieChart\n      loading={loading}\n      chartConfig={{\n        innerRadius: '45%',\n        outerRadius: '80%',\n        activeSegment: 0,\n        showActiveSegmentDataLabel: true,\n      }}\n      dataset={aContinents}\n      dimension={{\n        accessor: 'continent',\n      }}\n      measure={{\n        accessor: 'cases',\n      }}\n      style={{\n        width: '100%',\n      }}\n      noAnimation={false}\n    />\n  );\n};\n\nexport default ContinentsChart;\n","import { AnalyticalCard, AnalyticalCardHeader, FlexBox, FlexBoxDirection, ValueState } from '@ui5/webcomponents-react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next/';\n\nconst style = {\n  KPIstyles: {\n    height: '6.5rem',\n    width: '15rem',\n    'margin-bottom': '1rem',\n  },\n};\n\nconst KPI = ({ title, value, unit, valueState, arrow, subtitle }) => {\n  const { t } = useTranslation();\n\n  return (\n    <AnalyticalCard\n      header={\n        <AnalyticalCardHeader\n          arrowIndicator={arrow ? arrow : 'Up'}\n          subTitle={t(subtitle)}\n          counter={t('counterKPI')}\n          indicatorState={valueState ? valueState : ValueState.None}\n          title={t(title)}\n          unit={t(unit)}\n          value={value}\n          valueState={valueState ? valueState : ValueState.None}\n        />\n      }\n      style={style.KPIstyles}\n    />\n  );\n};\n\nconst ContinentsKPIs = ({ items }) => {\n  const { t } = useTranslation();\n\n  const iCases = items ? items.reduce((acc, oItem) => acc + oItem.todayCases, 0) : 0;\n  const iRecovered = items ? items.reduce((acc, oItem) => acc + oItem.todayRecovered, 0) : 0;\n  const iDeaths = items ? items.reduce((acc, oItem) => acc + oItem.todayDeaths, 0) : 0;\n  const iCritical = items ? parseFloat(items.reduce((acc, oItem) => acc + oItem.criticalPerOneMillion, 0)).toFixed(2) : 0;\n\n  return (\n    <FlexBox direction={FlexBoxDirection.Column}>\n      <KPI title=\"casesKPITitle\" unit=\"casesKPIUnit\" value={iCases} />\n      <KPI title=\"criticalKPITitle\" unit=\"casesKPIUnit\" value={iCritical} valueState={ValueState.Warning} subtitle=\"criticalKPISubtitle\" />\n      <KPI title=\"recoveredKPITitle\" unit=\"recoveredKPIUnit\" value={iRecovered} valueState={ValueState.Success} />\n      <KPI title=\"deathsKPITTitle\" unit=\"deathsKPIUnit\" value={iDeaths} valueState={ValueState.Error} />\n    </FlexBox>\n  );\n};\n\nexport default ContinentsKPIs;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport ContinetsList from './ContinentsList';\nimport ContinentsChart from './ContinentsChart';\nimport Request from '../../../util/api/engine/Request';\nimport ContinentsKPIs from './ContinentsKPIs';\n\nconst style = {\n  continentsCard: {\n    width: '400px',\n    height: '30rem',\n    'margin-bottom': '1rem',\n  },\n};\n\nconst ContinetsCard = () => {\n  const { t } = useTranslation();\n\n  const [bList, changeContent] = useState(false);\n  const [bLoading, setLoading] = useState(false);\n  const [aContinents, setEntitySet] = useState([]);\n\n  const onChangeView = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setLoading(false);\n      changeContent(!bList);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      Request.read('ContinentsSet').then((oResponse) => {\n        setEntitySet(oResponse.data);\n      });\n    }\n  }, [aContinents.length]);\n\n  return (\n    <>\n      <Card\n        heading={t('continentsCardHeader')}\n        avatar={<Icon name=\"globe\" />}\n        subheading={bList ? t('continentsCardSubHeaderList') : t('continentsCardSubHeaderChart')}\n        style={style.continentsCard}\n        headerInteractive\n        onHeaderClick={onChangeView}\n        tooltip={t('continentsCardTol')}\n      >\n        {bList ? <ContinetsList items={aContinents} loading={bLoading} /> : <ContinentsChart items={aContinents} loading={bLoading} />}\n      </Card>\n      <ContinentsKPIs items={aContinents} />\n    </>\n  );\n};\n\nexport default ContinetsCard;\n","import { StandardListItem, List, FlexBox, Title, TitleLevel, ProgressIndicator, FlexBoxWrap, Label, FlexBoxDirection } from '@ui5/webcomponents-react';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState, useEffect } from 'react';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  listItem: {\n    height: '4rem',\n  },\n  list: { height: '20rem' },\n};\n\nconst CountriesList = ({ items }) => {\n  const { t } = useTranslation();\n\n  const [aCountries, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      var aResults = items.map((self) => self);\n      setEntitySet(aResults);\n    }\n  }, [aCountries.length, items]);\n\n  return (\n    <List style={style.list}>\n      {aCountries.map((oCountry) => (\n        <StandardListItem style={style.listItem} key={oCountry.countryInfo.iso2} info={oCountry.cases} infoState={Formatter.covidCasesCountries(oCountry.cases)} image={oCountry.countryInfo.flag}>\n          <FlexBox wrap={FlexBoxWrap} direction={FlexBoxDirection.Column}>\n            <Title level={TitleLevel.H4}>{oCountry.country}</Title>\n\n            <ProgressIndicator value={(oCountry.recovered / oCountry.cases) * 100} valueState={Formatter.covidRecovered((oCountry.recovered / oCountry.cases) * 100)} />\n            <Label>{t('listRecoveredLabel')}</Label>\n          </FlexBox>\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default CountriesList;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport Request from '../../../util/api/engine/Request';\nimport CountriesList from './CountriesList';\nimport { Icon } from '@ui5/webcomponents-react';\n\nconst style = {\n  countriesCard: {\n    width: '400px',\n    height: '25.5rem',\n  },\n};\n\nconst CountriesCard = () => {\n  const { t } = useTranslation();\n  const [aCountries, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      Request.read('TopCountriesPerCasesSet').then((oResponse) => {\n        setEntitySet(oResponse.data.slice(0, 5));\n      });\n    }\n  }, [aCountries.length]);\n\n  return (\n    <Card heading={t('countriesCardHeader')} style={style.countriesCard} avatar={<Icon name=\"list\" />}>\n      <CountriesList items={aCountries} />\n    </Card>\n  );\n};\n\nexport default CountriesCard;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n//import { useHistory } from 'react-router-dom';\nimport { spacing } from '@ui5/webcomponents-react-base';\nimport { useTranslation } from 'react-i18next';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/lib/FlexBoxWrap';\nimport ContinetsCard from '../../../components/Cards/ContinentsCard/ContinentsCard';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react';\nimport CountriesCard from '../../../components/Cards/CountriesCard/CountriesCard';\n\nconst Dashboard = () => {\n  //const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Helmet title={t('helmet.title.dashboard.overview')} />\n      <FlexBox justifyContent={FlexBoxJustifyContent.SpaceAround} style={spacing.sapUiContentPadding} wrap={FlexBoxWrap.Wrap}>\n        <ContinetsCard />\n        <CountriesCard />\n      </FlexBox>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}