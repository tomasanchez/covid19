{"version":3,"sources":["components/Cards/ContinentsCard/ContinentsList.jsx","components/Cards/ContinentsCard/ContinentsChart.jsx","components/Cards/ContinentsCard/ContinentsKPIs.jsx","components/Cards/ContinentsCard/ContinetsStatistics.jsx","components/Cards/ContinentsCard/ContinentsCard.jsx","components/Cards/CountriesCard/CountriesList.jsx","components/Cards/CountriesCard/CountriesTable.jsx","components/Cards/CountriesCard/CountriesCard.jsx","pages/Overview/Dashboard/Dashboard.jsx","util/model/Formatter.js"],"names":["style","countryCard","width","continentItem","height","ContinentsList","items","loading","t","useTranslation","useState","aContinents","setEntitySet","useEffect","length","aResults","map","i","List","separators","ListSeparators","Inner","Loader","oContinent","iKey","StandardListItem","datatype","description","population","info","Formatter","localeNumber","todayCases","infoState","covidCasesContinent","selected","data-id","continent","type","FlexBox","Title","level","TitleLevel","H4","Icon","name","ContinentsChart","sort","oContinentA","oContinentB","cases","PieChart","chartConfig","innerRadius","outerRadius","activeSegment","showActiveSegmentDataLabel","dataset","dimension","accessor","formatter","measure","noAnimation","KPIstyles","marginBottom","KPI","title","value","unit","valueState","arrow","subtitle","AnalyticalCard","header","AnalyticalCardHeader","arrowIndicator","subTitle","counter","indicatorState","ValueState","None","ContinentsKPIs","iCases","reduce","acc","oItem","iRecovered","todayRecovered","iDeaths","todayDeaths","iCritical","parseFloat","criticalPerOneMillion","toFixed","direction","FlexBoxDirection","Column","Warning","Success","Error","ContinetsStatistics","ColumnChart","gridHorizontal","gridStroke","gridVertical","legendHorizontalAlign","legendPosition","resizeDebounce","xAxisVisible","yAxisVisible","zoomingTool","dimensions","measures","label","continentsCard","ContinetsCard","bList","changeContent","bLoading","setLoading","Request","read","then","oResponse","data","forEach","Card","heading","avatar","subheading","headerInteractive","onHeaderClick","setTimeout","tooltip","listItem","list","CountriesList","history","useHistory","aCountries","self","onItemClick","oEvent","push","getUrl","detail","item","id","oCountry","covidCasesCountries","image","countryInfo","flag","country","wrap","FlexBoxWrap","ProgressIndicator","recovered","covidRecovered","Label","iso2","ObjectNumber","ttip","fvalue","alignItems","FlexBoxAlignItems","Center","spacing","sapUiContentPadding","ObjectStatus","state","Columns","Header","Cell","cell","alt","src","H6","row","original","CountriesTable","fitContainer","visibleRows","AnalyticalTable","columns","scaleWidthMode","countriesCard","window","innerWidth","allCountriesCard","CountriesCard","aTopCountries","setTopCountries","aData","slice","Dashboard","Helmet","justifyContent","FlexBoxJustifyContent","SpaceAround","Wrap","sValueState","Information","number","Intl","NumberFormat","format"],"mappings":"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","file":"static/js/11.46f0cff8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { FlexBox, Icon, ListSeparators, Loader, Title, TitleLevel } from '@ui5/webcomponents-react';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  countryCard: {\n    width: '20rem',\n  },\n\n  continentItem: {\n    height: '4rem',\n  },\n};\n\nconst ContinentsList = ({ items, loading }) => {\n  const { t } = useTranslation();\n\n  const [aContinents, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <List separators={ListSeparators.Inner}>\n      {loading && <Loader />}\n      {aContinents.map((oContinent, iKey) => (\n        <StandardListItem\n          key={iKey}\n          datatype={oContinent}\n          description={t('description.population') + oContinent.population}\n          style={style.continentItem}\n          info={Formatter.localeNumber(oContinent.todayCases)}\n          infoState={Formatter.covidCasesContinent(oContinent.todayCases)}\n          selected=\"false\"\n          data-id={oContinent.continent}\n          type=\"Inactive\"\n        >\n          <FlexBox>\n            <Title level={TitleLevel.H4}>{t(oContinent.continent)}</Title>\n          </FlexBox>\n          <Icon name=\"group\" />\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContinentsList;\n","import React, { useEffect, useState } from 'react';\nimport { PieChart } from '@ui5/webcomponents-react-charts';\nimport { useTranslation } from 'react-i18next';\nimport Formatter from '../../../util/model/Formatter';\n\nconst ContinentsChart = ({ items, loading }) => {\n  const [aContinents, setEntitySet] = useState([]);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      aResults.sort((oContinentA, oContinentB) => oContinentB.cases - oContinentA.cases);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <PieChart\n      loading={loading}\n      chartConfig={{\n        innerRadius: '45%',\n        outerRadius: '80%',\n        activeSegment: 0,\n        showActiveSegmentDataLabel: true,\n      }}\n      dataset={aContinents}\n      dimension={{\n        accessor: 'continent',\n        formatter: t,\n      }}\n      measure={{\n        accessor: 'cases',\n        formatter: Formatter.localeNumber,\n      }}\n      style={{\n        width: '100%',\n      }}\n      noAnimation={false}\n    />\n  );\n};\n\nexport default ContinentsChart;\n","import { AnalyticalCard, AnalyticalCardHeader, FlexBox, FlexBoxDirection, ValueState } from '@ui5/webcomponents-react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next/';\nimport Formatter from '../../../util/model/Formatter';\n\nconst style = {\n  KPIstyles: {\n    height: '6.5rem',\n    width: '15rem',\n    marginBottom: '1rem',\n  },\n};\n\nconst KPI = ({ title, value, unit, valueState, arrow, subtitle }) => {\n  const { t } = useTranslation();\n\n  return (\n    <AnalyticalCard\n      header={\n        <AnalyticalCardHeader\n          arrowIndicator={arrow ? arrow : 'Up'}\n          subTitle={t(subtitle)}\n          counter={t('counterKPI')}\n          indicatorState={valueState ? valueState : ValueState.None}\n          title={t(title)}\n          unit={t(unit)}\n          value={Formatter.localeNumber(value)}\n          valueState={valueState ? valueState : ValueState.None}\n        />\n      }\n      style={style.KPIstyles}\n    />\n  );\n};\n\nconst ContinentsKPIs = ({ items }) => {\n  const iCases = items ? items.reduce((acc, oItem) => acc + oItem.todayCases, 0) : 0;\n  const iRecovered = items ? items.reduce((acc, oItem) => acc + oItem.todayRecovered, 0) : 0;\n  const iDeaths = items ? items.reduce((acc, oItem) => acc + oItem.todayDeaths, 0) : 0;\n  const iCritical = items ? parseFloat(items.reduce((acc, oItem) => acc + oItem.criticalPerOneMillion, 0)).toFixed(2) : 0;\n\n  return (\n    <FlexBox direction={FlexBoxDirection.Column}>\n      <KPI title=\"casesKPITitle\" unit=\"casesKPIUnit\" value={iCases} />\n      <KPI title=\"criticalKPITitle\" unit=\"casesKPIUnit\" value={iCritical} valueState={ValueState.Warning} subtitle=\"criticalKPISubtitle\" />\n      <KPI title=\"recoveredKPITitle\" unit=\"recoveredKPIUnit\" value={iRecovered} valueState={ValueState.Success} />\n      <KPI title=\"deathsKPITTitle\" unit=\"deathsKPIUnit\" value={iDeaths} valueState={ValueState.Error} />\n    </FlexBox>\n  );\n};\n\nexport default ContinentsKPIs;\n","import React, { useEffect, useState } from 'react';\nimport { ColumnChart } from '@ui5/webcomponents-react-charts';\nimport { useTranslation } from 'react-i18next';\nimport Formatter from '../../../util/model/Formatter';\n\nconst ContinetsStatistics = ({ items }) => {\n  const [aContinents, setEntitySet] = useState([]);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      var aResults = items.map((i) => i);\n      setEntitySet(aResults);\n    }\n  }, [aContinents.length, items]);\n\n  return (\n    <ColumnChart\n      dataset={aContinents}\n      chartConfig={{\n        gridHorizontal: true,\n        gridStroke: 'var(--sapList_BorderColor)',\n        gridVertical: false,\n        legendHorizontalAlign: 'left',\n        legendPosition: 'bottom',\n        resizeDebounce: 250,\n        xAxisVisible: true,\n        yAxisVisible: false,\n        zoomingTool: false,\n      }}\n      dimensions={[\n        {\n          accessor: 'continent',\n          formatter: t,\n        },\n      ]}\n      measures={[\n        { accessor: 'activePerOneMillion', formatter: Formatter.localeNumber, label: t('activeChartLabel') },\n        { accessor: 'deathsPerOneMillion', formatter: Formatter.localeNumber, label: t('deathsChartLabel') },\n        { accessor: 'recoveredPerOneMillion', formatter: Formatter.localeNumber, label: t('recoveredChartLabel') },\n      ]}\n      style={{\n        width: '100%',\n      }}\n    />\n  );\n};\n\nexport default ContinetsStatistics;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport ContinetsList from './ContinentsList';\nimport ContinentsChart from './ContinentsChart';\nimport Request from '../../../util/api/engine/Request';\nimport ContinentsKPIs from './ContinentsKPIs';\nimport Formatter from '../../../util/model/Formatter';\nimport ContinetsStatistics from './ContinetsStatistics';\n\nconst style = {\n  continentsCard: {\n    width: '400px',\n    height: '29.5rem',\n    marginBottom: '1rem',\n  },\n};\n\nconst ContinetsCard = () => {\n  const { t } = useTranslation();\n\n  const [bList, changeContent] = useState(false);\n  const [bLoading, setLoading] = useState(false);\n  const [aContinents, setEntitySet] = useState([]);\n\n  const onChangeView = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setLoading(false);\n      changeContent(!bList);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (aContinents.length === 0) {\n      Request.read('ContinentsSet').then((oResponse) => {\n        oResponse.data.forEach((oContinent) => (oContinent.population = Formatter.localeNumber(oContinent.population)));\n        setEntitySet(oResponse.data);\n      });\n    }\n  }, [aContinents.length]);\n\n  return (\n    <>\n      <Card\n        heading={t('continentsCardHeader')}\n        avatar={<Icon name=\"globe\" />}\n        subheading={bList ? t('continentsCardSubHeaderList') : t('continentsCardSubHeaderChart')}\n        style={style.continentsCard}\n        headerInteractive\n        onHeaderClick={onChangeView}\n        tooltip={t('continentsCardTol')}\n      >\n        {bList ? <ContinetsList items={aContinents} loading={bLoading} /> : <ContinentsChart items={aContinents} loading={bLoading} />}\n      </Card>\n      <ContinentsKPIs items={aContinents} />\n      <Card heading={t('continentsChartCardHeader')} subheading={t('continentsChartCadSubHeader')} style={style.continentsCard} avatar={<Icon name=\"bar-chart\" />}>\n        <ContinetsStatistics items={aContinents} />\n      </Card>\n    </>\n  );\n};\n\nexport default ContinetsCard;\n","import { StandardListItem, List, FlexBox, Title, TitleLevel, ProgressIndicator, FlexBoxWrap, Label, FlexBoxDirection, ListSeparators } from '@ui5/webcomponents-react';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState, useEffect } from 'react';\nimport Formatter from '../../../util/model/Formatter';\nimport { useHistory } from 'react-router-dom';\nimport { getUrl } from '../../../util/browser/BrowserProvider';\n\nconst style = {\n  listItem: {\n    height: '4rem',\n  },\n  list: { height: '20rem' },\n};\n\nconst CountriesList = ({ items }) => {\n  const history = useHistory();\n\n  const { t } = useTranslation();\n\n  const [aCountries, setEntitySet] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      var aResults = items.map((self) => self);\n      setEntitySet(aResults);\n    }\n  }, [aCountries.length, items]);\n\n  const onNavTo = (oEvent) => {\n    history.push(getUrl('DETAILS', [{ value: oEvent.detail.item.dataset.id }]));\n  };\n\n  return (\n    <List style={style.list} separators={ListSeparators.Inner} onItemClick={onNavTo}>\n      {aCountries.map((oCountry) => (\n        <StandardListItem\n          style={style.listItem}\n          key={oCountry.countryInfo.iso2}\n          info={Formatter.localeNumber(oCountry.cases)}\n          infoState={Formatter.covidCasesCountries(oCountry.cases)}\n          image={oCountry.countryInfo.flag}\n          data-id={oCountry.country}\n        >\n          <FlexBox wrap={FlexBoxWrap} direction={FlexBoxDirection.Column}>\n            <Title level={TitleLevel.H4}>{oCountry.country}</Title>\n            <ProgressIndicator value={(oCountry.recovered / oCountry.cases) * 100} valueState={Formatter.covidRecovered((oCountry.recovered / oCountry.cases) * 100)} />\n            <Label>{t('listRecoveredLabel')}</Label>\n          </FlexBox>\n        </StandardListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default CountriesList;\n","import React from 'react';\nimport { spacing } from '@ui5/webcomponents-react-base';\nimport { AnalyticalTable, FlexBox, FlexBoxAlignItems, FlexBoxWrap, ObjectStatus, Title, TitleLevel } from '@ui5/webcomponents-react';\nimport { useTranslation } from 'react-i18next';\nimport Formatter from '../../../util/model/Formatter';\n\nconst ObjectNumber = ({ value, formatter, ttip, fvalue }) => {\n  return (\n    <FlexBox alignItems={FlexBoxAlignItems.Center} wrap={FlexBoxWrap} style={spacing.sapUiContentPadding}>\n      <ObjectStatus state={formatter ? (fvalue ? formatter(fvalue) : formatter(value)) : 'None'} tooltip={!value ? ttip : ''}>\n        {Formatter.localeNumber(value)}\n      </ObjectStatus>\n    </FlexBox>\n  );\n};\n\nconst Columns = () => {\n  const { t } = useTranslation();\n  return [\n    {\n      Header: t('countryColumnHeader'),\n      accessor: 'countryInfo.flag',\n      Cell: (cell) => {\n        return (\n          <FlexBox alignItems={FlexBoxAlignItems.Center} wrap={FlexBoxWrap} style={spacing.sapUiContentPadding}>\n            <img alt={t('loadingFlag')} src={cell.value} height=\"30px\" width=\"45px\" />\n            <Title level={TitleLevel.H6} style={spacing.sapUiContentPadding}>\n              {cell.cell.row.original.country}\n            </Title>\n          </FlexBox>\n        );\n      },\n    },\n    {\n      Header: t('casesColumnHeader'),\n      accessor: 'cases',\n      Cell: (cell) => {\n        return <ObjectNumber formatter={Formatter.covidCasesCountries} value={cell.value} />;\n      },\n    },\n    {\n      Header: t('recoveredColumnHeader'),\n      accessor: 'recovered',\n      Cell: (cell) => {\n        return <ObjectNumber formatter={Formatter.covidRecovered} fvalue={(cell.value * 100) / cell.cell.row.original.cases} value={cell.value} ttip={t('recoveredTooltip')} />;\n      },\n    },\n    {\n      Header: t('deceasesColumnHeader'),\n      accessor: 'deaths',\n      Cell: (cell) => {\n        return <ObjectNumber value={cell.value} />;\n      },\n    },\n  ];\n};\n\nconst CountriesTable = ({ items }) => {\n  return (\n    <FlexBox fitContainer={true} wrap={FlexBoxWrap} visibleRows={7}>\n      <AnalyticalTable data={items} columns={Columns()} scaleWidthMode=\"Smart\" />\n    </FlexBox>\n  );\n};\n\nexport default CountriesTable;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@ui5/webcomponents-react/lib/Card';\nimport Request from '../../../util/api/engine/Request';\nimport CountriesList from './CountriesList';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport CountriesTable from './CountriesTable';\n\nconst style = {\n  countriesCard: {\n    width: window.innerWidth >= 768 ? '27vw' : '400px',\n    height: '25.15rem',\n    marginBottom: '1rem',\n  },\n\n  allCountriesCard: {\n    width: window.innerWidth >= 768 ? '40vw' : '95vw',\n    height: '27.35rem',\n  },\n};\n\nconst CountriesCard = () => {\n  const { t } = useTranslation();\n  const [aCountries, setEntitySet] = useState([]);\n  const [aTopCountries, setTopCountries] = useState([]);\n\n  useEffect(() => {\n    if (aCountries.length === 0) {\n      Request.read('TopCountriesPerCasesSet').then((oResponse) => {\n        var aData = oResponse.data.map((i) => i);\n        setTopCountries(aData.slice(0, 5));\n        setEntitySet(oResponse.data);\n      });\n    }\n  }, [aCountries.length]);\n\n  return (\n    <>\n      <Card heading={t('countriesCardHeader')} style={style.countriesCard} avatar={<Icon name=\"list\" />}>\n        <CountriesList items={aTopCountries} />\n      </Card>\n      <Card heading={t('allCountriesCardHeader')} style={style.allCountriesCard} avatar={<Icon name=\"table-view\" />}>\n        <CountriesTable items={aCountries} />\n      </Card>\n    </>\n  );\n};\n\nexport default CountriesCard;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n//import { useHistory } from 'react-router-dom';\nimport { spacing } from '@ui5/webcomponents-react-base';\nimport { useTranslation } from 'react-i18next';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { FlexBoxWrap } from '@ui5/webcomponents-react/lib/FlexBoxWrap';\nimport ContinetsCard from '../../../components/Cards/ContinentsCard/ContinentsCard';\nimport { FlexBoxJustifyContent } from '@ui5/webcomponents-react';\nimport CountriesCard from '../../../components/Cards/CountriesCard/CountriesCard';\n\nconst Dashboard = () => {\n  //const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Helmet title={t('helmet.title.dashboard.overview')} />\n      <FlexBox justifyContent={FlexBoxJustifyContent.SpaceAround} style={spacing.sapUiContentPadding} wrap={FlexBoxWrap.Wrap}>\n        <ContinetsCard />\n        <CountriesCard />\n      </FlexBox>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { ValueState } from '@ui5/webcomponents-react';\n\nconst Formatter = {\n  covidCasesContinent: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 50000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 150000) sValueState = ValueState.Error;\n    } else if (iCases >= 25000) sValueState = ValueState.Information;\n\n    return sValueState;\n  },\n\n  covidCasesCountries: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 5000000) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 10500000) sValueState = ValueState.Error;\n    } else if (iCases >= 1000000) sValueState = ValueState.Information;\n    else if (iCases <= 500000) sValueState = ValueState.Success;\n\n    return sValueState;\n  },\n\n  covidRecovered: (iCases) => {\n    var sValueState = ValueState.None;\n\n    if (iCases >= 55) {\n      sValueState = ValueState.Warning;\n      if (iCases >= 70) {\n        sValueState = ValueState.Information;\n        if (iCases >= 90) sValueState = ValueState.Success;\n      }\n    } else if (iCases <= 45) sValueState = ValueState.Error;\n\n    return sValueState;\n  },\n\n  localeNumber: (number) => {\n    return Intl.NumberFormat().format(number);\n  },\n};\n\nexport default Formatter;\n"],"sourceRoot":""}